
#Область СобытияФормы
#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ДобавитьВТаблицуКолонкиНаСервере();
	ЗаполнитьТаблицуНаФормеИзОбъекта();
	ЗаполнитьДоступныеЧасыПерсонала();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналДинамическаяПриИзменении(Элемент)
	ЗаполнитьДоступныеЧасыПерсонала();
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	ДоговорОб = Договор.ПолучитьОбъект();
	ДоговорОб.Персонал.Очистить();
	Для Каждого Колонка Из СоответствиеПериодовНазванийКолонок Цикл
		Для Каждого Стр Из ПерсоналДинамическая Цикл
			СтрОбъекта 						= ДоговорОб.Персонал.Добавить();
			СтрОбъекта.Должность 			= Стр.Должность;
			СтрОбъекта.СтатьяЗатрат			= Стр.СтатьяЗатрат;
			СтрОбъекта.КоличествоСтавок		= 1;
			СтрОбъекта.КоличествоМесяцев	= 1;
			СтрОбъекта.ДатаПотребности		= Колонка.Месяц;
			СтрОбъекта.КоличествоЧасовВДень	= Стр[Колонка.ИмяКолонки];
			СтрОбъекта.Цена					= Стр.Цена;
			СтрОбъекта.ЦенаПрошлогоПериода				= Стр.ЦенаПрошлогоПериода;
			СтрОбъекта.ЦенаПрошлогоПериодаСоСтатьей103	= Стр.ЦенаПрошлогоПериодаСоСтатьей103;
			СтрОбъекта.ЦенаПрошлогоПериодаСоцПакет		= Стр.ЦенаПрошлогоПериодаСоцПакет;
			СтрОбъекта.Сумма							= Стр[Колонка.ИмяКолонкиСумма];	
			СтрОбъекта.СуммаПрошлогоПериода				= Стр[Колонка.ИмяКолонкиСуммаПрошлыйПериод];
			СтрОбъекта.СуммаПрошлогоПериодаСоСтатьей103	= Стр[Колонка.ИмяКолонкиСуммаПрошлыйПериод103];
			СтрОбъекта.СуммаПрошлогоПериодаСоцПакет		= Стр[Колонка.ИмяКолонкиСуммаПрошлыйПериодСоцПакет];
		КонецЦикла;
	КонецЦикла;
	ДоговорОб.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьЦеныПерсонал(Команда)
	ПересчитатьЦеныПерсоналНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦеныПерсоналНаСервере()
	
	Для Каждого Стр Из ПерсоналДинамическая Цикл
		Стр.Цена	= ПолучитьЦенуНаРесурс(Договор.Организация, Договор.Сценарий, Стр.Должность, ТекущаяДата());
		Стр.ЦенаПрошлогоПериода	= ПолучитьЦенуНаРесурс(Договор.Организация, Договор.Сценарий, Стр.Должность, ТекущаяДата(),"ЦенаПрошлогоПериода");
		Стр.ЦенаПрошлогоПериодаСоСтатьей103	= ПолучитьЦенуНаРесурс(Договор.Организация, Договор.Сценарий, Стр.Должность, ТекущаяДата(),"ЦенаПрошлогоПериодаСоСтатьей103");
		Стр.ЦенаПрошлогоПериодаСоцПакет	= ПолучитьЦенуНаРесурс(Договор.Организация, Договор.Сценарий, Стр.Должность, ТекущаяДата(),"ЦенаПрошлогоПериодаСоцПакет");
	КонецЦикла;
	
	ЗаполнитьДоступныеЧасыПерсонала();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсе(Команда)
	КоличествоЧасов = 0;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ЗаполнитьВсеЗавершение", ЭтотОбъект, Новый Структура("КоличествоЧасов", КоличествоЧасов)), КоличествоЧасов,"Введите количество часов:",10,2);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсеЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	КоличествоЧасов = ?(Число = Неопределено, ДополнительныеПараметры.КоличествоЧасов, Число);
	
	Для Каждого Стр Из ПерсоналДинамическая Цикл
		Для Каждого СтрКолонки Из СоответствиеПериодовНазванийКолонок Цикл 
			Стр[СтрКолонки.ИмяКолонки] = КоличествоЧасов;
		КонецЦикла;
	КонецЦикла;
	
	ЗаполнитьДоступныеЧасыПерсонала();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыделенныеСтроки(Команда)
	КоличествоЧасов = 0;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ЗаполнитьВыделенныеСтрокиЗавершение", ЭтотОбъект, Новый Структура("КоличествоЧасов", КоличествоЧасов)), КоличествоЧасов,"Введите количество часов:",10,2);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыделенныеСтрокиЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	КоличествоЧасов = ?(Число = Неопределено, ДополнительныеПараметры.КоличествоЧасов, Число);
	
	Для Каждого НомерСтр Из Элементы.ПерсоналДинамическая.ВыделенныеСтроки Цикл
		Для Каждого СтрКолонки Из СоответствиеПериодовНазванийКолонок Цикл 
			ПерсоналДинамическая.НайтиПоИдентификатору(НомерСтр)[СтрКолонки.ИмяКолонки] = КоличествоЧасов;
		КонецЦикла;
	КонецЦикла;
	
	ЗаполнитьДоступныеЧасыПерсонала();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыделенныеЯчейки(Команда)
	КоличествоЧасов = 0;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ЗаполнитьВыделенныеЯчейкиЗавершение", ЭтотОбъект, Новый Структура("КоличествоЧасов", КоличествоЧасов)), КоличествоЧасов,"Введите количество часов:",10,2);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыделенныеЯчейкиЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	КоличествоЧасов = ?(Число = Неопределено, ДополнительныеПараметры.КоличествоЧасов, Число);
	
	СписокМесяцев = Новый СписокЗначений;
	Для Каждого Стр Из СоответствиеПериодовНазванийКолонок Цикл
		СписокМесяцев.Добавить(Стр.ИмяКолонки,Формат(Стр.Месяц,"ДФ='MMMM yyyy'"));
	КонецЦикла;
	
	СписокМесяцев.ЗаполнитьПометки(Истина);
	СписокМесяцев.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения("ЗаполнитьВыделенныеЯчейкиЗавершениеЗавершение", ЭтотОбъект, Новый Структура("КоличествоЧасов", КоличествоЧасов)),"Выберите колонки для заполнения:");

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыделенныеЯчейкиЗавершениеЗавершение(СписокМесяцев, ДополнительныеПараметры) Экспорт
	
	Если СписокМесяцев <> Неопределено Тогда 
		
		Для Каждого НомерСтр Из Элементы.ПерсоналДинамическая.ВыделенныеСтроки Цикл
			Для Каждого СтрКолонки Из СписокМесяцев Цикл 
				Если СтрКолонки.Пометка Тогда 
					ПерсоналДинамическая.НайтиПоИдентификатору(НомерСтр)[СтрКолонки.Значение] = ДополнительныеПараметры.КоличествоЧасов;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьДоступныеЧасыПерсонала();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьВТаблицуКолонкиНаСервере()
	
	ПерсоналДинамическая.Очистить();
	
	ОтображатьЦеныПрошлыхПериодов = Константы.ОтображатьЦеныПрошлыхПериодов.Получить();
	
	Если ОтображатьЦеныПрошлыхПериодов Тогда 
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериода.Видимость				= Истина;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериода.Видимость				= Истина;	
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериодаСоСтатьей103.Видимость	= Истина;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериодаСоСтатьей103.Видимость	= Истина;	
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериодаСоцПакет.Видимость		= Истина;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериодаСоцПакет.Видимость		= Истина;
	Иначе
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериода.Видимость				= Ложь;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериода.Видимость				= Ложь;	
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериодаСоСтатьей103.Видимость	= Ложь;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериодаСоСтатьей103.Видимость	= Ложь;	
		Элементы.ПерсоналДинамическаяЦенаПрошлогоПериодаСоцПакет.Видимость		= Ложь;	
		Элементы.ПерсоналДинамическаяСуммаПрошлогоПериодаСоцПакет.Видимость		= Ложь;		
	КонецЕсли;
	
	ПерсоналДинамическаяЗначение = РеквизитФормыВЗначение("ПерсоналДинамическая");
    
    МассивРеквизитов = Новый Массив;
    
	Для Каждого Колонка Из ПерсоналДинамическаяЗначение.Колонки Цикл
		Если СтрНайти(Колонка.Имя,"Месяц") <> 0  Тогда 
        	МассивРеквизитов.Добавить("ПерсоналДинамическая." + Колонка.Имя);        
		КонецЕсли;
    КонецЦикла;
    ИзменитьРеквизиты(,МассивРеквизитов);
	
	Для Каждого СтрСоотвествие Из СоответствиеПериодовНазванийКолонок Цикл
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонки);	
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонкиИспользовано);
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонкиСумма);
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериод);
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериод103);
		ПерсоналДинамическаяЗначение.Колонки.Удалить(СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериодСоцПакет);

		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонки));
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонкиИспользовано));
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонкиСумма));
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериод));
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериод103));
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическая"+СтрСоотвествие.ИмяКолонкиСуммаПрошлыйПериодСоцПакет));
	КонецЦикла;
	
	НомерМесяца	= 1;
	
	Пока Элементы.Найти("ПерсоналДинамическаяГруппа"+НомерМесяца) <> Неопределено Цикл
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическаяГруппа"+НомерМесяца));
		НомерМесяца	= НомерМесяца + 1;
	КонецЦикла;
	
	НомерМесяца	= 1;
	
	Пока Элементы.Найти("ПерсоналДинамическаяГруппаСуммы"+НомерМесяца) <> Неопределено Цикл
		Элементы.Удалить(Элементы.Найти("ПерсоналДинамическаяГруппаСуммы"+НомерМесяца));
		НомерМесяца	= НомерМесяца + 1;	
	КонецЦикла;
	
	СоответствиеПериодовНазванийКолонок.Очистить();
	
	Месяц		= НачалоМесяца(Договор.ДатаНачала);
	НомерМесяца	= 1;
	
	Пока Месяц <= Договор.ДатаОкончания Цикл
		
		ИмяКолонки	= "Месяц" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонки,,Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Число"), "ТЗ");
		
		ИмяКолонкиИспользовано	= "МесяцИспользовано" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонкиИспользовано,,"Использовано " + Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Строка"), "ТЗ");
		
		ИмяКолонкиСумма	= "МесяцСумма" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонкиСумма,,"Сумма " + Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Число"), "ТЗ");
		
		ИмяКолонкиСуммаПрошлыйПериод	= "МесяцСуммаПрошлыйПериод" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонкиСуммаПрошлыйПериод,,"Сумма " + Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонкиСуммаПрошлыйПериод, Новый ОписаниеТипов("Число"), "ТЗ");
		
		ИмяКолонкиСуммаПрошлыйПериод103	= "МесяцСуммаПрошлыйПериод103" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонкиСуммаПрошлыйПериод103,,"Сумма " + Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонкиСуммаПрошлыйПериод103, Новый ОписаниеТипов("Число"), "ТЗ");
		
		ИмяКолонкиСуммаПрошлыйПериодСоцПакет	= "МесяцСуммаПрошлыйПериодСоцПакет" + Формат(НомерМесяца,"ЧГ=");
		ПерсоналДинамическаяЗначение.Колонки.Добавить(ИмяКолонкиСуммаПрошлыйПериодСоцПакет,,"Сумма " + Формат(Месяц,"ДФ='MMMM yyyy'"));
		НоваяКолонка = Новый РеквизитФормы(ИмяКолонкиСуммаПрошлыйПериодСоцПакет, Новый ОписаниеТипов("Число"), "ТЗ");

		
		Стр 					= СоответствиеПериодовНазванийКолонок.Добавить();
		Стр.ИмяКолонки 			= ИмяКолонки;
		Стр.ИмяКолонкиИспользовано 	= ИмяКолонкиИспользовано;
		Стр.ИмяКолонкиСумма 	= ИмяКолонкиСумма;
		Стр.ИмяКолонкиСуммаПрошлыйПериод 	= ИмяКолонкиСуммаПрошлыйПериод;
		Стр.ИмяКолонкиСуммаПрошлыйПериод103 	= ИмяКолонкиСуммаПрошлыйПериод103;
		Стр.ИмяКолонкиСуммаПрошлыйПериодСоцПакет 	= ИмяКолонкиСуммаПрошлыйПериодСоцПакет;
		Стр.Месяц 				= Месяц;
		
		Месяц		= НачалоМесяца(ДобавитьМесяц(Месяц,1));
		НомерМесяца	= НомерМесяца + 1;
		
	КонецЦикла;	
	
	МассивРеквизитов.Очистить();
	Для Каждого Колонка ИЗ ПерсоналДинамическаяЗначение.Колонки Цикл
		Если СтрНайти(Колонка.Имя,"Месяц") <> 0 Тогда
			Если СтрНайти(Колонка.Имя,"МесяцИспользовано") <> 0 Тогда
				НоваяКолонка = Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Строка"), "ПерсоналДинамическая");
				МассивРеквизитов.Добавить(НоваяКолонка);
			ИначеЕсли СтрНайти(Колонка.Имя,"МесяцСумма") <> 0 Тогда
				НоваяКолонка = Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,2)), "ПерсоналДинамическая");
				МассивРеквизитов.Добавить(НоваяКолонка);
			Иначе 
				НоваяКолонка = Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(10,2)), "ПерсоналДинамическая");
				МассивРеквизитов.Добавить(НоваяКолонка);
			КонецЕсли;
		КонецЕсли;    		
	КонецЦикла;      
	ИзменитьРеквизиты(МассивРеквизитов);  
	ЗначениеВРеквизитФормы(ПерсоналДинамическаяЗначение, "ПерсоналДинамическая");
	
	//Элементы формы
	
	ЭлементПерсоналДинамическая = Элементы.ПерсоналДинамическая;
	
	Месяц		= НачалоМесяца(Договор.ДатаНачала);
	НомерМесяца	= 1;
	
	Пока Месяц <= Договор.ДатаОкончания Цикл
		
		НоваяГруппаФормы 				= Элементы.Добавить("ПерсоналДинамическаяГруппа"+НомерМесяца, Тип("ГруппаФормы"), ЭлементПерсоналДинамическая);
		НоваяГруппаФормы.Заголовок		= Формат(Месяц,"ДФ='MMMM yyyy'");
		НоваяГруппаФормы.ОтображатьВШапке	= Истина;
		НоваяГруппаФормы.Группировка	= ГруппировкаКолонок.Вертикальная;
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяц"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.Месяц" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Кол-во часов";
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяцИспользовано"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.МесяцИспользовано" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Использовано";
		НовыйЭлементФормы.ГоризонтальноеПоложение	= ГоризонтальноеПоложениеЭлемента.Право;
		НовыйЭлементФормы.ТолькоПросмотр			= Истина;
		
		НоваяГруппаФормыСуммы 				= Элементы.Добавить("ПерсоналДинамическаяГруппаСуммы"+НомерМесяца, Тип("ГруппаФормы"), НоваяГруппаФормы);
		НоваяГруппаФормыСуммы.Заголовок		= Формат(Месяц,"ДФ='MMMM yyyy'");
		НоваяГруппаФормыСуммы.ОтображатьВШапке	= Ложь;
		НоваяГруппаФормыСуммы.Группировка	= ГруппировкаКолонок.Горизонтальная;
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяцСумма"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормыСуммы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		Если Не РольДоступна("КЛАДО_ПросмотрЦенПерсонала") Тогда
			//НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.МесяцСумма" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Сумма";
		НовыйЭлементФормы.ТолькоПросмотр			= Истина;
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяцСуммаПрошлыйПериод"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормыСуммы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		Если Не РольДоступна("КЛАДО_ПросмотрЦенПерсонала") Тогда
			//НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		Если НЕ ОтображатьЦеныПрошлыхПериодов Тогда 
			НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.МесяцСуммаПрошлыйПериод" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Сумма прош. периода";
		НовыйЭлементФормы.ТолькоПросмотр			= Истина;
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяцСуммаПрошлыйПериод103"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормыСуммы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		Если Не РольДоступна("КЛАДО_ПросмотрЦенПерсонала") Тогда
			//НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		Если НЕ ОтображатьЦеныПрошлыхПериодов Тогда 
			НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.МесяцСуммаПрошлыйПериод103" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Сумма прош. периода + ст. 103";
		НовыйЭлементФормы.ТолькоПросмотр			= Истина;
		
		НовыйЭлементФормы 				= Элементы.Добавить("ПерсоналДинамическаяМесяцСуммаПрошлыйПериодСоцПакет"+НомерМесяца, Тип("ПолеФормы"), НоваяГруппаФормыСуммы);
		НовыйЭлементФормы.Вид 			= ВидПоляФормы.ПолеВвода;
		Если Не РольДоступна("КЛАДО_ПросмотрЦенПерсонала") Тогда
			//НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		Если НЕ ОтображатьЦеныПрошлыхПериодов Тогда 
			НовыйЭлементФормы.Видимость = Ложь;
		КонецЕсли;
		НовыйЭлементФормы.ПутьКДанным 	= "ПерсоналДинамическая.МесяцСуммаПрошлыйПериодСоцПакет" + НомерМесяца;
		НовыйЭлементФормы.Заголовок		= "Сумма прош. периода + соц. пакет";
		НовыйЭлементФормы.ТолькоПросмотр			= Истина;
		
		Месяц		= НачалоМесяца(ДобавитьМесяц(Месяц,1));
		НомерМесяца	= НомерМесяца + 1;
		
	КонецЦикла;
	
	Если Не РольДоступна("КЛАДО_ПросмотрЦенПерсонала") Тогда
		//Элементы.ПерсоналДинамическаяСумма.Видимость = Ложь;
		//Элементы.ПерсоналДинамическаяЦена.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьТаблицуНаФормеИзОбъекта()
	
	Для Каждого Стр Из Договор.Персонал Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Месяц", НачалоМесяца(Стр.ДатаПотребности));
		НайденныеСтроки = СоответствиеПериодовНазванийКолонок.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого НайдСтрока Из НайденныеСтроки Цикл
			НазваниеКолонки = НайдСтрока.ИмяКолонки;
		КонецЦикла;
		
		Если НайденныеСтроки.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;		
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Должность", Стр.Должность);
		ПараметрыОтбора.Вставить("СтатьяЗатрат", Стр.СтатьяЗатрат);
		НайденныеСтроки = ПерсоналДинамическая.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого НайдСтрока Из НайденныеСтроки Цикл
			НайдСтрока[НазваниеКолонки] = Стр.КоличествоЧасовВДень;	
		КонецЦикла;
		
		Если НайденныеСтроки.Количество() = 0 Тогда 
			СтрНовая					= ПерсоналДинамическая.Добавить();
			СтрНовая.Должность			= Стр.Должность;
			СтрНовая.СтатьяЗатрат		= Стр.СтатьяЗатрат;
			СтрНовая[НазваниеКолонки]	= Стр.КоличествоЧасовВДень;
			СтрНовая.Цена				= Стр.Цена;
			СтрНовая.ЦенаПрошлогоПериода				= Стр.ЦенаПрошлогоПериода;
			СтрНовая.ЦенаПрошлогоПериодаСоСтатьей103	= Стр.ЦенаПрошлогоПериодаСоСтатьей103;
			СтрНовая.ЦенаПрошлогоПериодаСоцПакет		= Стр.ЦенаПрошлогоПериодаСоцПакет;
		КонецЕсли;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеЧасыПерсонала()
	
	СписокПерсонала = Новый Массив;
	Для Каждого Стр Из ПерсоналДинамическая Цикл
		СписокПерсонала.Добавить(Стр.Должность);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УчетВремениПерсоналаОстаткиИОбороты.Должность КАК Должность,
		|	УчетВремениПерсоналаОстаткиИОбороты.Месяц КАК Месяц,
		|	УчетВремениПерсоналаОстаткиИОбороты.КоличествоЧасовПриход КАК КоличествоЧасовПриход,
		|	УчетВремениПерсоналаОстаткиИОбороты.КоличествоЧасовРасход КАК КоличествоЧасовРасход,
		|	УчетВремениПерсоналаОстаткиИОбороты.КоличествоЧасовКонечныйОстаток КАК КоличествоЧасовКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.УчетВремениПерсонала.ОстаткиИОбороты(
		|			,
		|			,
		|			,
		|			,
		|			НЕ Договор = &ТекДоговор
		|				И Должность В (&СписокПерсонала)) КАК УчетВремениПерсоналаОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("СписокПерсонала", СписокПерсонала);
	Запрос.УстановитьПараметр("ТекДоговор", Договор.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Должность", ВыборкаДетальныеЗаписи.Должность);
		СтрокиПерсонала = ПерсоналДинамическая.НайтиСтроки(ПараметрыОтбора);
		Для Каждого СтрПерсонал Из СтрокиПерсонала Цикл
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Месяц", ВыборкаДетальныеЗаписи.Месяц);
			СтрокиСоответствия = СоответствиеПериодовНазванийКолонок.НайтиСтроки(ПараметрыОтбора);
			Для Каждого СтрСоответствия Из СтрокиСоответствия Цикл
				СтрПерсонал[СтрСоответствия.ИмяКолонкиИспользовано] = Формат(ВыборкаДетальныеЗаписи.КоличествоЧасовРасход,"ЧН=0; ЧГ=") + "/" + Формат(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход,"ЧН=0; ЧГ=");
				Если ВыборкаДетальныеЗаписи.КоличествоЧасовРасход = 0 Тогда
					Если СтрПерсонал[СтрСоответствия.ИмяКолонки] <> 0 Тогда 
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСумма]	= СтрПерсонал.Цена;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод]	= СтрПерсонал.ЦенаПрошлогоПериода;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103]	= СтрПерсонал.ЦенаПрошлогоПериодаСоСтатьей103;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет]	= СтрПерсонал.ЦенаПрошлогоПериодаСоцПакет;
					Иначе 
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСумма]	= 0;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод]	= 0;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103]	= 0;
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет]	= 0; 
					КонецЕсли;
				Иначе
					Если ВыборкаДетальныеЗаписи.КоличествоЧасовРасход + СтрПерсонал[СтрСоответствия.ИмяКолонки] >= ВыборкаДетальныеЗаписи.КоличествоЧасовПриход Тогда  
						
						КоличествоЧасовДляРасчета = ВыборкаДетальныеЗаписи.КоличествоЧасовПриход - ВыборкаДетальныеЗаписи.КоличествоЧасовРасход;
						Если КоличествоЧасовДляРасчета < 0 Тогда 
							КоличествоЧасовДляРасчета  = 0;
						КонецЕсли;
						
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСумма]	 = СтрПерсонал.Цена * КоличествоЧасовДляРасчета /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод]	 = СтрПерсонал.ЦенаПрошлогоПериода * КоличествоЧасовДляРасчета /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоСтатьей103 * КоличествоЧасовДляРасчета /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
						СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоцПакет * КоличествоЧасовДляРасчета /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
					Иначе
						Если ЭтоПервыйДоговор(Договор.Ссылка, ВыборкаДетальныеЗаписи.Месяц, СтрПерсонал.Должность) И СтрПерсонал[СтрСоответствия.ИмяКолонки] <> 0 Тогда
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСумма]	 = СтрПерсонал.Цена * (ВыборкаДетальныеЗаписи.КоличествоЧасовПриход-ВыборкаДетальныеЗаписи.КоличествоЧасовРасход) /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод]	 = СтрПерсонал.ЦенаПрошлогоПериода * (ВыборкаДетальныеЗаписи.КоличествоЧасовПриход-ВыборкаДетальныеЗаписи.КоличествоЧасовРасход) /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоСтатьей103 * (ВыборкаДетальныеЗаписи.КоличествоЧасовПриход-ВыборкаДетальныеЗаписи.КоличествоЧасовРасход) /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоцПакет * (ВыборкаДетальныеЗаписи.КоличествоЧасовПриход-ВыборкаДетальныеЗаписи.КоличествоЧасовРасход) /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
						Иначе
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСумма]	 = СтрПерсонал.Цена * СтрПерсонал[СтрСоответствия.ИмяКолонки] /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод]	 = СтрПерсонал.ЦенаПрошлогоПериода * СтрПерсонал[СтрСоответствия.ИмяКолонки] /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоСтатьей103 * СтрПерсонал[СтрСоответствия.ИмяКолонки] /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
							СтрПерсонал[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет]	 = СтрПерсонал.ЦенаПрошлогоПериодаСоцПакет * СтрПерсонал[СтрСоответствия.ИмяКолонки] /(?(ВыборкаДетальныеЗаписи.КоличествоЧасовПриход = 0,8,ВыборкаДетальныеЗаписи.КоличествоЧасовПриход));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ОбщаяСуммаПерсонал = 0;
	
	Для Каждого Стр Из ПерсоналДинамическая Цикл
		Стр.Сумма = 0;
		Стр.СуммаПрошлогоПериода = 0;
		Стр.СуммаПрошлогоПериодаСоСтатьей103 = 0;
		Стр.СуммаПрошлогоПериодаСоцПакет = 0;
		Для Каждого СтрСоответствия Из СоответствиеПериодовНазванийКолонок Цикл
			Стр.Сумма = Стр.Сумма + Стр[СтрСоответствия.ИмяКолонкиСумма];
			Стр.СуммаПрошлогоПериода = Стр.СуммаПрошлогоПериода + Стр[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод];
			Стр.СуммаПрошлогоПериодаСоСтатьей103 = Стр.СуммаПрошлогоПериодаСоСтатьей103 + Стр[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериод103];
			Стр.СуммаПрошлогоПериодаСоцПакет = Стр.СуммаПрошлогоПериодаСоцПакет + Стр[СтрСоответствия.ИмяКолонкиСуммаПрошлыйПериодСоцПакет];
		КонецЦикла;
		ОбщаяСуммаПерсонал = ОбщаяСуммаПерсонал + Стр.Сумма;
	КонецЦикла;
	
	Элементы.ПерсоналДинамическаяСумма.ТекстПодвала = Формат(ОбщаяСуммаПерсонал,"ЧДЦ=2");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПервыйДоговор(СсылкаНаДоговор, Месяц, Должность)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаДоговор) Тогда 
		Возврат Ложь;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СписаниеВремениПерсоналаВремя.Ссылка.Договор КАК Договор,
	|	СписаниеВремениПерсоналаВремя.Месяц КАК Месяц,
	|	СписаниеВремениПерсоналаВремя.Должность КАК Должность
	|ИЗ
	|	Документ.СписаниеВремениПерсонала.Время КАК СписаниеВремениПерсоналаВремя
	|ГДЕ
	|	СписаниеВремениПерсоналаВремя.Месяц = &Месяц
	|	И СписаниеВремениПерсоналаВремя.Должность = &Должность
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписаниеВремениПерсоналаВремя.Ссылка.Дата";
	
	Запрос.УстановитьПараметр("Должность", Должность);
	Запрос.УстановитьПараметр("Месяц", Месяц);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.Договор = СсылкаНаДоговор Тогда 
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЦенуНаРесурс(Организация, Сценарий, Ресурс, ДатаРасчета = Неопределено, ВидЦеныПерсонала = "Цена")  
	
	Если Не ЗначениеЗаполнено(ДатаРасчета) Тогда 
		ДатаРасчета = ТекущаяДата();	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПлановыеЦеныНаРесурсыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ПлановыеЦеныНаРесурсы.СрезПоследних(
		|			&ДатаРасчета,
		|			Организация = &Организация
		|				И Ресурс = &Ресурс
		|				И Сценарий = &Сценарий) КАК ПлановыеЦеныНаРесурсыСрезПоследних";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,".Цена","."+ВидЦеныПерсонала);
	
	Запрос.УстановитьПараметр("ДатаРасчета",	ДатаРасчета);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Если ТипЗнч(Ресурс) = Тип("СправочникСсылка.Персонал") Тогда 
		Запрос.УстановитьПараметр("Ресурс",		Ресурс.Должность);
	Иначе 
		Запрос.УстановитьПараметр("Ресурс",		Ресурс);
	КонецЕсли;
	Запрос.УстановитьПараметр("Сценарий",		Сценарий);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Цена
	КонецЦикла;
	
	Возврат 0

КонецФункции

#КонецОбласти
