
Функция ЗатратыИзУчетнойСистемыPOST(Запрос)
	
	ТелоЗапроса = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТелоЗапроса);
	МассивЗатратИзУчетнойСистемы = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	Для Каждого ЭлементМассива Из МассивЗатратИзУчетнойСистемы Цикл
		
		Guid = Новый УникальныйИдентификатор(ЭлементМассива.GUID);
		ЗагрузкаЗатратИзУчетнойСистемыСсылка = Документы.ЗагрузкаЗатратИзУчетнойСистемы.ПолучитьСсылку(Guid);
		ЗагрузкаЗатратИзУчетнойСистемыОбъект = ЗагрузкаЗатратИзУчетнойСистемыСсылка.ПолучитьОбъект();
		
		Если ЗагрузкаЗатратИзУчетнойСистемыОбъект = Неопределено Тогда 
			ЗагрузкаЗатратИзУчетнойСистемыОбъект = Документы.ЗагрузкаЗатратИзУчетнойСистемы.СоздатьДокумент();
			ЗагрузкаЗатратИзУчетнойСистемыОбъект.УстановитьСсылкуНового(ЗагрузкаЗатратИзУчетнойСистемыСсылка);
		КонецЕсли;
		
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.Дата			= ПреобразоватьДату(ЭлементМассива.Дата);
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.НачалоПериода	= ПреобразоватьДату(ЭлементМассива.НачалоПериода);
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.КонецПериода	= ПреобразоватьДату(ЭлементМассива.КонецПериода);
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.Комментарий	= ЭлементМассива.Комментарий;
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.Организация	= Константы.ОрганизацияПоУмолчанию.Получить();
		
		Если Не ЗначениеЗаполнено(ЗагрузкаЗатратИзУчетнойСистемыОбъект.Дата) Тогда 
			ЗагрузкаЗатратИзУчетнойСистемыОбъект.Дата = ТекущаяДата();
		КонецЕсли;
				
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.Затраты.Очистить();
		
		Для Каждого СтрокаЗатрат Из ЭлементМассива.Затраты Цикл 
			
			Стр = ЗагрузкаЗатратИзУчетнойСистемыОбъект.Затраты.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, СтрокаЗатрат);
			
			//Статьи затрат
			
			GuidСтатьиЗатрат = Новый УникальныйИдентификатор(СтрокаЗатрат.СтатьяЗатратGUID);
			
			Если ЗначениеЗаполнено(GuidСтатьиЗатрат) Тогда 
				
				СтатьяЗатрат = Справочники.СтатьиЗатратИзУчетнойСистемы.ПолучитьСсылку(GuidСтатьиЗатрат);
				
				Если СтатьяЗатрат.ПолучитьОбъект() = Неопределено Тогда
					СтатьяЗатратПоНаименованию = Справочники.СтатьиЗатратИзУчетнойСистемы.НайтиПоНаименованию(СтрокаЗатрат.СтатьяЗатрат, Истина);
					Если НЕ ЗначениеЗаполнено(СтатьяЗатратПоНаименованию) Тогда
						СтатьяЗатратНовая = Справочники.СтатьиЗатратИзУчетнойСистемы.СоздатьЭлемент();
						СтатьяЗатратНовая.УстановитьСсылкуНового(СтатьяЗатрат);
						СтатьяЗатратНовая.Наименование = СтрокаЗатрат.СтатьяЗатрат;
						СтатьяЗатратНовая.Записать();
					Иначе
						СтатьяЗатрат = СтатьяЗатратПоНаименованию;
					КонецЕсли;
				КонецЕсли;
				
				Стр.СтатьяЗатрат = СтатьяЗатрат;
				
			КонецЕсли;
			
			//Подразделения
			
			GuidПодразделение = Новый УникальныйИдентификатор(СтрокаЗатрат.ПодразделениеGUID);
			
			Если ЗначениеЗаполнено(GuidПодразделение) Тогда
				
				Подразделение = Справочники.ПодразделенияОрганизаций.ПолучитьСсылку(GuidПодразделение);
				
				Если Подразделение.ПолучитьОбъект() = Неопределено Тогда
					ПодразделениеПоНаименованию = Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию(СтрокаЗатрат.Подразделение, Истина);
					Если НЕ ЗначениеЗаполнено(ПодразделениеПоНаименованию) Тогда
						ПодразделениеНовое = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
						ПодразделениеНовое.УстановитьСсылкуНового(Подразделение);
						ПодразделениеНовое.Наименование = СтрокаЗатрат.Подразделение;
						ПодразделениеНовое.Владелец		= Константы.ОрганизацияПоУмолчанию.Получить();
						ПодразделениеНовое.Записать();
					Иначе 
						Подразделение = ПодразделениеПоНаименованию;
					КонецЕсли;
				КонецЕсли;
				
				Стр.Подразделение = Подразделение;
				
			КонецЕсли;
			
			//Номенклатурная группа
			
			GuidНоменклатурнаяГруппа = Новый УникальныйИдентификатор(СтрокаЗатрат.НоменклатурнаяГруппаGUID);
			
			Если ЗначениеЗаполнено(GuidНоменклатурнаяГруппа) Тогда
				
				НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПолучитьСсылку(GuidНоменклатурнаяГруппа);
				
				Если НоменклатурнаяГруппа.ПолучитьОбъект() = Неопределено Тогда
					НоменклатурнаяГруппаПоНаименованию = Справочники.НоменклатурныеГруппы.НайтиПоНаименованию(СтрокаЗатрат.НоменклатурнаяГруппа, Истина);
					Если НЕ ЗначениеЗаполнено(НоменклатурнаяГруппаПоНаименованию) Тогда
						НоменклатурнаяГруппаНовое = Справочники.НоменклатурныеГруппы.СоздатьЭлемент();
						НоменклатурнаяГруппаНовое.УстановитьСсылкуНового(НоменклатурнаяГруппа);
						НоменклатурнаяГруппаНовое.Наименование = СтрокаЗатрат.НоменклатурнаяГруппа;
						НоменклатурнаяГруппаНовое.Записать();
					Иначе 
						НоменклатурнаяГруппа = НоменклатурнаяГруппаПоНаименованию;
					КонецЕсли;
				КонецЕсли;
				
				Стр.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
				
			КонецЕсли;
			
			//Контрагент
			
			GuidКонтрагент = Новый УникальныйИдентификатор(СтрокаЗатрат.КонтрагентGUID);
			
			Если ЗначениеЗаполнено(GuidКонтрагент) Тогда
				
				Контрагент = Справочники.Контрагенты.ПолучитьСсылку(GuidКонтрагент);
				
				Если Контрагент.ПолучитьОбъект() = Неопределено Тогда
					КонтрагентПоНаименованию = Справочники.Контрагенты.НайтиПоНаименованию(СтрокаЗатрат.Контрагент, Истина);
					Если НЕ ЗначениеЗаполнено(КонтрагентПоНаименованию) Тогда
						Продолжить;
						//КонтрагентНовое = Справочники.Контрагенты.СоздатьЭлемент();
						//КонтрагентНовое.УстановитьСсылкуНового(Контрагент);
						//КонтрагентНовое.Наименование = СтрокаЗатрат.Контрагент;
						//КонтрагентНовое.Записать();
					Иначе 
						Контрагент = КонтрагентПоНаименованию;
					КонецЕсли;
				КонецЕсли;
				
				Стр.Контрагент = Контрагент;
				
			КонецЕсли;
			
			//Договор
			
			GuidДоговор = Новый УникальныйИдентификатор(СтрокаЗатрат.ДоговорКонтрагентаGUID);
			
			Если ЗначениеЗаполнено(GuidДоговор) Тогда
				
				Договор = Справочники.ДоговорыКонтрагентов.ПолучитьСсылку(GuidДоговор);
				
				Если Договор.ПолучитьОбъект() = Неопределено Тогда
					ДоговорПоНаименованию = Справочники.ДоговорыКонтрагентов.НайтиПоКоду(СтрокаЗатрат.ДоговорКонтрагентаКод, Истина);
					Если НЕ ЗначениеЗаполнено(ДоговорПоНаименованию) Тогда
						ДоговорНовое = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
						ДоговорНовое.УстановитьСсылкуНового(Договор);
						ДоговорНовое.Наименование = СтрокаЗатрат.ДоговорКонтрагента;
						ДоговорНовое.Код = СтрокаЗатрат.ДоговорКонтрагентаКод;
						ДоговорНовое.Владелец = Стр.Контрагент;
						ДоговорНовое.Записать();
					Иначе 
						Договор = ДоговорПоНаименованию;	
					КонецЕсли;
				КонецЕсли;
				
				Стр.ДоговорКонтрагента = Договор;
				
			КонецЕсли;
		
		КонецЦикла;
		
		ЗагрузкаЗатратИзУчетнойСистемыОбъект.Записать();
		
	КонецЦикла;
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
	
КонецФункции

Функция ПреобразоватьДату(ДатаИсходная)
	
	ДатаПреобразованная = СтрЗаменить(ДатаИсходная,"T","");
	ДатаПреобразованная = СтрЗаменить(ДатаПреобразованная,"-","");
	ДатаПреобразованная = СтрЗаменить(ДатаПреобразованная,":","");
	
	Возврат Дата(ДатаПреобразованная);
	
КонецФункции
