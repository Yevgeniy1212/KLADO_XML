&НаКлиенте
Процедура Печать(Команда)
	
	ТабличныйДокумент = ПечатьНаСервере();
	//ТабличныйДокумент.Показать();
	
	КоллекцияПечатныхФорм = УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("ТекущиеЗадачи");
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ТабличныйДокумент;
	КоллекцияПечатныхФорм[0].ИмяФайлаПечатнойФормы = "Текущие задачи " + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	КоллекцияПечатныхФорм[0].СинонимМакета = "Текущие задачи " + Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм);
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере()
	
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("ПФ_Договор");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокОбщий");
	ОбластьОтбор = Макет.ПолучитьОбласть("СтрокаОтбор");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если ЗначениеЗаполнено(Период) Тогда
		ОбластьЗаголовок.Параметры.Текстзаголовка = "БИЗНЕС-ПРОЦЕССЫ В РАМКАХ ДОГОВОРОВ.";
		ОбластьЗаголовок.Параметры.Период = "Период с " + Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy") + " по " + Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ЗначениеЗаполнено(Период) Тогда
		ОбластьОтбор.Параметры.Ключ = "Период:";
		ОбластьОтбор.Параметры.Значение = Формат(Период.ДатаНачала, "ДФ=dd.MM.yyyy") + "-" + Формат(Период.ДатаОкончания, "ДФ=dd.MM.yyyy");
		ТабличныйДокумент.Вывести(ОбластьОтбор);
	КонецЕсли;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ОбластьОтбор.Параметры.Ключ = "Подразделение:";
		ОбластьОтбор.Параметры.Значение = Подразделение;
		ТабличныйДокумент.Вывести(ОбластьОтбор);
	КонецЕсли;
	Если ЗначениеЗаполнено(АдминистраторДоговора) Тогда
		ОбластьОтбор.Параметры.Ключ = "Администратор договора:";
		ОбластьОтбор.Параметры.Значение = АдминистраторДоговора;
		ТабличныйДокумент.Вывести(ОбластьОтбор);
	КонецЕсли;
	Если ЗначениеЗаполнено(АдминистраторЗадачи) Тогда
		ОбластьОтбор.Параметры.Ключ = "Администратор задачи:";
		ОбластьОтбор.Параметры.Значение = АдминистраторЗадачи;
		ТабличныйДокумент.Вывести(ОбластьОтбор);
	КонецЕсли;
	Если ЗначениеЗаполнено(Договор) Тогда
		ОбластьОтбор.Параметры.Ключ = "Договор:";
		ОбластьОтбор.Параметры.Значение = Договор;
		ТабличныйДокумент.Вывести(ОбластьОтбор);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Задачи.Владелец КАК Договор,
	               |	ПредставлениеСсылки(Задачи.Владелец) КАК ДоговорНаименование,
				   |	Задачи.Владелец.ТипДоговора КАК ТипДоговора,
				   |	Задачи.Владелец.НаименованиеДоговора КАК НаименованиеДоговора
	               |ИЗ
	               |	Справочник.Задачи КАК Задачи
	               |ГДЕ
	               |	Задачи.Владелец ССЫЛКА Справочник.Договоры
				   //|	И Задачи.Владелец.Администратор = &Администратор
				   //|	И Задачи.Владелец В(&Договоры)
					|	//Отбор АдминистраторДоговора//
					|	//Отбор Договоры//
					|	//Отбор Подразделение//
					|	//Отбор АдминистраторЗадачи//
					|	//Отбор Период//
					|	//Отбор Роли//
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Задачи.Владелец
				   |Упорядочить по ТипДоговора";
	
   Если ЗначениеЗаполнено(АдминистраторДоговора) Тогда
	   Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор АдминистраторДоговора//", "И Задачи.Владелец.Администратор = &АдминистраторДоговора" + Символы.ПС);
	   Запрос.УстановитьПараметр("АдминистраторДоговора", АдминистраторДоговора);
	КонецЕсли;
   Если Договор.КОличество() > 0 Тогда
	   Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Договоры//", "И Задачи.Владелец В(&Договоры)" + Символы.ПС);
	   Запрос.УстановитьПараметр("Договоры", Договор);
	КонецЕсли;
   Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Подразделение//", "И Задачи.Подразделение = &Подразделение" + Символы.ПС);
	   Запрос.УстановитьПараметр("Подразделение", Подразделение);
	КонецЕсли;
   Если ЗначениеЗаполнено(АдминистраторЗадачи) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор АдминистраторЗадачи//", "И Задачи.Администратор = &АдминистраторЗадачи" + Символы.ПС);
	   Запрос.УстановитьПараметр("АдминистраторЗадачи", АдминистраторЗадачи);
	КонецЕсли;
   Если ЗначениеЗаполнено(Период) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Период//", "И (Задачи.ДатаНачала <= &ДатаОкончания И Задачи.ДатаОкончания >= &ДатаНачала
															|	ИЛИ Задачи.ДатаОкончания >= &ДатаНачала И Задачи.ДатаНачала <= &ДатаОкончания)" + Символы.ПС);
	   Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	   Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	КонецЕсли;
	
	ТекущийСотрудник = Пользователи.ТекущийПользователь().Сотрудник;
	Если Не ЗначениеЗаполнено(ТекущийСотрудник) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить текущего сотрудника пользователя!");
	КонецЕсли;
	ОтображатьВсеДанные = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийСотрудник, "Должность.ОтображатьВсеДанные"); 
	Если Не ЗначениеЗаполнено(ОтображатьВсеДанные) Тогда
		//добавляем отбор по объектам
		СписокПроектов = КЛАДО_ОбщийМодульСервер.ПолучитьСписокПроектовТекущегоСотрудника(ТекущийСотрудник);
		СписокДоговоровПодразделений = КЛАДО_ОбщийМодульСервер.ПолучитьСписокДоговоровРуководителяПодразделения(ТекущийСотрудник);
	   Запрос.УстановитьПараметр("СписокПроектов", СписокПроектов);
	   Запрос.УстановитьПараметр("СписокДоговоровПодразделений", СписокДоговоровПодразделений);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Роли//", "И (Задачи.Владелец.Проект В (&СписокПроектов) 
															|	ИЛИ Задачи.Владелец В (&СписокДоговоровПодразделений))" + Символы.ПС);
	КонецЕсли;
	
	//МассивОбъектов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Договор");
	МассивОбъектов = Новый Массив;
	ОбластьДоговорНаименование = Макет.ПолучитьОбласть("ДоговорНаименование");
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекТип = Неопределено;
	Пока Выборка.Следующий() Цикл
		МассивОбъектов.Добавить(Выборка.Договор);   
		Если ТекТип <> Выборка.ТипДоговора Тогда
			ОбластьДоговорНаименование.Параметры.ТипДоговора = Строка(Выборка.ТипДоговора) + ":";	
			ТекТип = Выборка.ТипДоговора ;
		Иначе
			ОбластьДоговорНаименование.Параметры.ТипДоговора = "";		
		КонецЕсли;
		ОбластьДоговорНаименование.Параметры.ДоговорНаименование = Строка(Выборка.ТипДоговора) + "-" + Выборка.НаименованиеДоговора;		
		ТабличныйДокумент.Вывести(ОбластьДоговорНаименование);
	КонецЦикла;
	
	СтрокаРазделитель = Макет.ПолучитьОбласть("СтрокаРазделитель");
	ТабличныйДокумент.Вывести(СтрокаРазделитель);
	
	ПечатнаяФормаДоговора(ТабличныйДокумент, Макет, МассивОбъектов);
	
	Возврат ТабличныйДокумент
	
КонецФункции

Функция ПечатнаяФормаДоговора(ТабличныйДокумент, Макет, МассивОбъектов)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Договоры.Ссылка КАК Ссылка,
	|	Договоры.Код КАК Код,
	|	Договоры.Наименование КАК Наименование,
	|	Договоры.Администратор КАК Администратор,
	|	Договоры.ТипДоговора КАК ТипДоговора,
	|	Договоры.ДатаНачала КАК ДатаНачала,
	|	Договоры.ДатаОкончания КАК ДатаОкончания,
	|	Договоры.Контрагент КАК Контрагент,
	|	Договоры.НаименованиеДоговора КАК НаименованиеДоговора,
	|	Договоры.СостояниеИсполнения КАК СостояниеИсполнения,
	|	Договоры.Администратор.Представление КАК АдминистраторПредставление,
	|	ВЫБОР
	|		КОГДА Договоры.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ДТ3)
	|			ТОГДА Договоры.НаименованиеСтороны1
	|		ИНАЧЕ ""Заказчик""
	|	КОНЕЦ КАК НаименованиеСтороны1,
	|	ВЫБОР
	|		КОГДА Договоры.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.ДТ3)
	|			ТОГДА Договоры.НаименованиеСтороны2
	|		ИНАЧЕ ""Исполнитель""
	|	КОНЕЦ КАК НаименованиеСтороны2,
	|	Договоры.Представление КАК Представление
	|ИЗ
	|	Справочник.Договоры КАК Договоры
	|ГДЕ
	|	Договоры.Ссылка В(&Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задачи.Ссылка КАК Ссылка,
	|	Задачи.Владелец КАК Договор,
	|	Задачи.ЭтапДоговора КАК ЭтапДоговора,
	|	Задачи.СторонаЗадачи КАК СторонаЗадачи,
	|	Задачи.Представление КАК Наименование,
	|	Задачи.Администратор КАК Администратор,
	|	Задачи.ДатаНачала КАК ДатаНачала,
	|	Задачи.ДатаОкончания КАК ДатаОкончания,
	|	Задачи.СтатусЗадачи КАК СтатусЗадачи
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|ГДЕ
	|	Задачи.Владелец В(&Ссылка)
	|	И НЕ Задачи.ПометкаУдаления
	//|	И Задачи.Подразделение = &Подразделение
	//|	И Задачи.Администратор = &Администратор
	//|	И Задачи.ДатаНачала >= &ДатаНачала
	//|	И Задачи.ДатаОкончания < &ДатаОкончания
	|	//Отбор Подразделение//
	|	//Отбор АдминистраторЗадачи//
	|	//Отбор Период//
	|
	|УПОРЯДОЧИТЬ ПО
	|	Договор,
	|	ЭтапДоговора,
	|	СторонаЗадачи,
	|	Ссылка ИЕРАРХИЯ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
   Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Подразделение//", "И Задачи.Подразделение = &Подразделение" + Символы.ПС);
	   Запрос.УстановитьПараметр("Подразделение", Подразделение);
	КонецЕсли;
   Если ЗначениеЗаполнено(АдминистраторЗадачи) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор АдминистраторЗадачи//", "И Задачи.Администратор = &АдминистраторЗадачи" + Символы.ПС);
	   Запрос.УстановитьПараметр("АдминистраторЗадачи", АдминистраторЗадачи);
	КонецЕсли;
   Если ЗначениеЗаполнено(Период) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//Отбор Период//", "И (Задачи.ДатаНачала <= &ДатаОкончания И Задачи.ДатаОкончания >= &ДатаНачала
															|	ИЛИ Задачи.ДатаОкончания >= &ДатаНачала И Задачи.ДатаНачала <= &ДатаОкончания)" + Символы.ПС);
	   Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	   Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	КонецЕсли;
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Шапка = Пакет[0].Выбрать();
	
	ТаблицаЗадачи = Пакет[1].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//ТабличныйДокумент.КлючПараметровПечати = "ПФ_Договор";
	ПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	Пока Шапка.Следующий() Цикл
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		Если  Шапка.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаДТ4");
		Иначе
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		
		ОбластьЗаголовок.Параметры.НаименованиеДоговора = Шапка.Представление;
		//ОбластьЗаголовок.Параметры.Администратор = Шапка.АдминистраторПредставление;
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		Если  Шапка.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ1")
			ИЛИ   Шапка.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ2") Тогда

			//Формирование
			ОбластьШапка.Параметры.Этап = "Этап формирования";
			ОбластьШапка.Параметры.НаименованиеСТороны1 = Шапка.НаименованиеСТороны1;
			ОбластьШапка.Параметры.НаименованиеСТороны2 = Шапка.НаименованиеСТороны2;
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			СтрокиТаблицыЗадачи = ТаблицаЗадачи.Строки.НайтиСтроки(Новый Структура("Договор, ЭтапДоговора, СторонаЗадачи", Шапка.Ссылка, Перечисления.ЭтапыДоговора.Формирование, 1));
			Таб1 = ПолучитьНовуюТЗЗадач();
			ЗаполнитьТаблицуРекурсивно(Таб1, СтрокиТаблицыЗадачи);
			СтрокиТаблицыЗадачи = ТаблицаЗадачи.Строки.НайтиСтроки(Новый Структура("Договор, ЭтапДоговора, СторонаЗадачи", Шапка.Ссылка, Перечисления.ЭтапыДоговора.Формирование, 2));
			Таб2 = ПолучитьНовуюТЗЗадач();
			ЗаполнитьТаблицуРекурсивно(Таб2, СтрокиТаблицыЗадачи);
			
			Кол1 = Таб1.Количество();
			Кол2 = Таб2.Количество();
			Для Инд = 1 По Макс(Кол1, Кол2) Цикл
				
				Если Инд <= Кол1 Тогда
					Задача1 = СтрШаблон("%1 - %2 - %3 - %4 - %5",  Таб1[Инд-1].Наименование , Формат(Таб1[Инд-1].ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(Таб1[Инд-1].ДатаОкончания, "ДФ=dd.MM.yyyy"), Таб1[Инд-1].Администратор, Таб1[Инд-1].СтатусЗадачи);
					ОбластьСтрока.Параметры.Задача1 = Задача1;
				Иначе
					ОбластьСтрока.Параметры.Задача1 = "";
				КонецЕсли;
				
				Если Инд <= Кол2 Тогда
					Задача2 = СтрШаблон("%1 - %2 - %3 - %4 - %5",  Таб2[Инд-1].Наименование , Формат(Таб2[Инд-1].ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(Таб2[Инд-1].ДатаОкончания, "ДФ=dd.MM.yyyy"), Таб2[Инд-1].Администратор, Таб2[Инд-1].СтатусЗадачи);
					ОбластьСтрока.Параметры.Задача2 = Задача2;
				Иначе
					ОбластьСтрока.Параметры.Задача2 = "";
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЦикла;
		КонецЕсли;	
		
		Если НЕ  Шапка.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") Тогда
			//исполнение
			ОбластьШапка.Параметры.Этап = "Этап исполнения";
			ОбластьШапка.Параметры.НаименованиеСТороны1 = Шапка.НаименованиеСТороны1;
			ОбластьШапка.Параметры.НаименованиеСТороны2 = Шапка.НаименованиеСТороны2;
			ТабличныйДокумент.Вывести(ОбластьШапка);
		КонецЕсли;
		
		Если  Шапка.ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") Тогда
			СтрокиТаблицыЗадачи = ТаблицаЗадачи.Строки.НайтиСтроки(Новый Структура("Договор, ЭтапДоговора, СторонаЗадачи", Шапка.Ссылка, Перечисления.ЭтапыДоговора.Исполнение, 1));
			Таб1 = ПолучитьНовуюТЗЗадач();
			ЗаполнитьТаблицуРекурсивно(Таб1, СтрокиТаблицыЗадачи);
			
			Для Инд = 1 По Таб1.Количество() Цикл
				Задача1 = СтрШаблон("%1 - %2 - %3 - %4 - %5",  Таб1[Инд-1].Наименование , Формат(Таб1[Инд-1].ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(Таб1[Инд-1].ДатаОкончания, "ДФ=dd.MM.yyyy"), Таб1[Инд-1].Администратор, Таб1[Инд-1].СтатусЗадачи);
				ОбластьСтрока.Параметры.Задача1 = Задача1;
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЦикла;
		Иначе
			СтрокиТаблицыЗадачи = ТаблицаЗадачи.Строки.НайтиСтроки(Новый Структура("Договор, ЭтапДоговора, СторонаЗадачи", Шапка.Ссылка, Перечисления.ЭтапыДоговора.Исполнение, 1));
			Таб1 = ПолучитьНовуюТЗЗадач();
			ЗаполнитьТаблицуРекурсивно(Таб1, СтрокиТаблицыЗадачи);
			СтрокиТаблицыЗадачи = ТаблицаЗадачи.Строки.НайтиСтроки(Новый Структура("Договор, ЭтапДоговора, СторонаЗадачи", Шапка.Ссылка, Перечисления.ЭтапыДоговора.Исполнение, 2));
			Таб2 = ПолучитьНовуюТЗЗадач();
			ЗаполнитьТаблицуРекурсивно(Таб2, СтрокиТаблицыЗадачи);
			
			
			Кол1 = Таб1.Количество();
			Кол2 = Таб2.Количество();
			Для Инд = 1 По Макс(Кол1, Кол2) Цикл
				
				Если Инд <= Кол1 Тогда
					Задача1 = СтрШаблон("%1 - %2 - %3 - %4 - %5",  Таб1[Инд-1].Наименование , Формат(Таб1[Инд-1].ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(Таб1[Инд-1].ДатаОкончания, "ДФ=dd.MM.yyyy"), Таб1[Инд-1].Администратор, Таб1[Инд-1].СтатусЗадачи);
					ОбластьСтрока.Параметры.Задача1 = Задача1;
				Иначе
					ОбластьСтрока.Параметры.Задача1 = "";
				КонецЕсли;
				
				Если Инд <= Кол2 Тогда
					Задача2 = СтрШаблон("%1 - %2 - %3 - %4 - %5",  Таб2[Инд-1].Наименование , Формат(Таб2[Инд-1].ДатаНачала, "ДФ=dd.MM.yyyy"), Формат(Таб2[Инд-1].ДатаОкончания, "ДФ=dd.MM.yyyy"), Таб2[Инд-1].Администратор, Таб2[Инд-1].СтатусЗадачи);
					ОбластьСтрока.Параметры.Задача2 = Задача2;
					//ОбластьСтрока.Параметры.Задача2 = Таб2[Инд-1].Наименование;
				Иначе
					ОбластьСтрока.Параметры.Задача2 = "";
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьСтрока);
			КонецЦикла;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ПустаяСтрока);
		
	КонецЦикла;
	
	
КонецФункции

Процедура ЗаполнитьТаблицуРекурсивно(Таб1, Выборка)
	Для Каждого Строка Из Выборка Цикл
		Стр = Таб1.Добавить();
		Стр.Уровень = Строка.Уровень();
		Стр.Наименование = Строка.Наименование;
		Для ин = 1 по Стр.Уровень Цикл
			Стр.Наименование = Символы.Таб + Стр.Наименование;
		КонецЦикла;
		Стр.СтатусЗадачи = Строка.СтатусЗадачи;
		Стр.Администратор = Строка.Администратор;
		Стр.ДатаНачала = Строка.ДатаНачала;
		Стр.ДатаОкончания = Строка.ДатаОкончания;
		ЗаполнитьТаблицуРекурсивно(Таб1, Строка.Строки);
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьНовуюТЗЗадач()
	Таб = Новый ТаблицаЗначений;
	Таб.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	Таб.Колонки.Добавить("Уровень", Новый ОписаниеТипов("Число"));
	Таб.Колонки.Добавить("СтатусЗадачи", Новый ОписаниеТипов("ПеречислениеСсылка.СтатусыЗадач"));
	Таб.Колонки.Добавить("Администратор", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таб.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таб.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	Возврат ТАб
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ПараметрыСеанса.СотрудникОтбор) Тогда
		АдминистраторЗадачи = ПараметрыСеанса.СотрудникОтбор;
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыСеанса.ПодразделениеОтбор) Тогда
		Подразделение = ПараметрыСеанса.ПодразделениеОтбор;
	КонецЕсли;
КонецПроцедуры

