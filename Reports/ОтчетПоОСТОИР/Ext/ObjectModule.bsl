#Область РегистрацияОбработки

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// 		*Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// 		*Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// 		*Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// 		*Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// 		*БезопасныйРежим – Булево – Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// 		*Информация - Строка- краткая информация по обработке, описание обработки
//
// 		*Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение – Булево – если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор – строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ВерсияБСП = СтандартныеПодсистемыСервер.ВерсияБиблиотеки();
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке(ВерсияБСП);
	
	ПараметрыРегистрации.Версия = "1.0";
	ПараметрыРегистрации.Наименование = "Отчет по ОС договоров"; // Наименование в справочнике внешние отчеты и обработки
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	ПараметрыРегистрации.Информация = "";
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();
	
	ЗаполнитьКомандыОбработки(ПараметрыРегистрации.Команды);
	ЗаполнитьНазначениеОбработки(ПараметрыРегистрации.Назначение);
	ЗаполнитьДополнительныеРазрешения(ПараметрыРегистрации.Разрешения);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Заполняет таблицу команд внешней обработки
//
// Параметры:
//  Команды	 - ТаблицаЗначений	 - 
//
Процедура ЗаполнитьКомандыОбработки(Команды)
	
	
КонецПроцедуры

// Добавляет команду в таблицу команд
//
// Параметры:
//  Команды				 - ТаблицаЗначений	 - настройки команд, поставляемых внешней обработкой:
//  Представление		 - Строка			 - пользовательское представление команды.
//  Идентификатор		 - Строка			 - Внутреннее имя команды. Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//  			Идентификатор может содержать имена одной или нескольких команд печати,
//  			разделенные запятыми. Подробнее см. описание колонки Идентификатор
//  			в функции СоздатьКоллекциюКомандПечати() общего модуля УправлениеПечатью.
//  Использование		 - Строка			 - тип команды:
//  			"ВызовКлиентскогоМетода",
//  			"ВызовСерверногоМетода",
//  			"ЗаполнениеФормы",
//  			"ОткрытиеФормы" или
//  			"СценарийВБезопасномРежиме".
//  			Для получения типов команд рекомендуется использовать функции
//  			ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//  			В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.
//  ПоказыватьОповещение - Булево			 - если Истина, то при запуске команды выводится оповещение "Команда выполняется...".
//  			Действует для всех типов команд, кроме команд по открытию формы (Использование = "ОткрытиеФормы").
//  Модификатор			 - Строка			 - дополнительная классификация команды.
//  			Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//  			"ПечатьMXL" - для печатных форм на основе табличных макетов.
//  			Для загрузки данных из файла (когда Вид = "ПечатнаяФорма" и Использование = "ЗагрузкаДанныхИзФайла"):
//  			Модификатор является обязательным для заполнения
//  			и должен содержать полное имя объекта метаданных (справочника),
//  			для которого выполняется загрузка данных.
//  			Скрыть - Булево - необязательный. Признак того, что это служебная команда.
//  			Если установить в значение Истина, то команда скрывается в карточке дополнительного объекта.
//
Процедура ДобавитьКоманду(Команды, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = Команды.Добавить();
	НоваяКоманда.Представление        = Представление;
	НоваяКоманда.Идентификатор 		  = Идентификатор;
	НоваяКоманда.Использование 		  = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор 	      = Модификатор;
	
КонецПроцедуры

// Заполняет назначения для регистрации обработки
//  Элементы массива полные имена объектов конфигурации (Строка), для которых предназначен эта обработка.
//
// Параметры:
//  Назначение	 - Массив	 - 
//
Процедура ЗаполнитьназначениеОбработки(Назначение)
	
	
КонецПроцедуры

// Заполняет дополнительные разрешения, необходимые внешней обработке при работе в безопасном режиме.
//  Элемент массива - ОбъектXDTO - разрешение типа
//  {http://www.1c.ru/1cFresh/ApplicationExtensions/Permissions/a.b.c.d}PermissionBase.
//  Для формирования описания разрешения рекомендуется использовать функции
//  РаботаВБезопасномРежиме.Разрешение<ВидРазрешения>(<ПараметрыРазрешения>).
//  Необязательное свойство.
//
// Параметры:
//  Разрешения	 - Массив	 - 
//
Процедура ЗаполнитьДополнительныеРазрешения(Разрешения)
	
	
КонецПроцедуры

#КонецОбласти  