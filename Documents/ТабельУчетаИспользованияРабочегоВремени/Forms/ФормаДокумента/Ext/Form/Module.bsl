&НаСервере
Перем СоответствиеПричинОтсутствияКолонкамТабеля;


#Область ОбработчикиСобытийФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ОбновитьТаблицу(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТабель

&НаКлиенте
Процедура ТабельПриИзменении(Элемент)
	ПерсчитатьСтроку(Элементы.Табель.ТекущиеДанные);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоИспользованиямРесурсов(Команда)
	
	Если Объект.Табель.Количество() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОчисткаТабеля", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, "Данные табеля будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет); 
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьПоИспользованиямРесурсовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	Для Каждого Стр Из Объект.Табель Цикл
		ПерсчитатьСтроку(Стр);	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыходные(Команда)
	НачМесяца = НачалоМесяца(Объект.Месяц);
	Для Каждого Стр Из Объект.Табель Цикл
		Для НомерДня = 1 По 31 Цикл
			ТекущийДеньНедели = ДеньНедели(НачМесяца + (НомерДня-1)*86400);
			Если ТекущийДеньНедели = 6 Или ТекущийДеньНедели = 7 Тогда 
				Стр["Число"+НомерДня] = "В";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ОбновитьТаблицу(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделению(Команда)
	ЗаполнитьПоПодразделениюНаСервере();
	ОбновитьТаблицу(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТабельПерсоналПриИзменении(Элемент)
	
	ТекущиеДанныеТабель = Элементы.Табель.ТекущиеДанные;
	
	Если ТекущиеДанныеТабель = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекущиеДанныеТабель.Предприятие = ПредприятиеЭлементаПерсонала(ТекущиеДанныеТабель.Персонал);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтсортироватьПоПредприятию(Команда)
	ОтсортироватьПоПредприятиюНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПерсчитатьСтроку(СтрокаТаблицы)
	
	ДниФактическойРаботы	= 0;
	ДниКоммандировки		= 0;
	ДниОтпуск				= 0;
	ДниОтпускРождение		= 0;
	ДниБолезнь				= 0;
	ДниУчебныйОтпуск		= 0;
	ДниПрочиеНеявки			= 0;
	ДниПрогул				= 0;
	ДниРазрешениеАдмин		= 0;
	ДниД					= 0;
	ДниН					= 0;
	ДниХ					= 0;
	ДниС					= 0;
	ДниВ					= 0;
	ВсегоЧасов				= 0;
	
	Для НомерДня = 1 По 31 Цикл
		ТекущийДень = ВРег(СтрокаТаблицы["Число"+НомерДня]);
		ЧасыДня = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ТекущийДень);
		Если ЧасыДня <> Неопределено И ЧасыДня <> 0 Тогда 
			ДниФактическойРаботы	= ДниФактическойРаботы + 1;
			ВсегоЧасов				= ВсегоЧасов + ЧасыДня;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"К") <> 0 Тогда 
			ДниКоммандировки = ДниКоммандировки + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"О") <> 0 Тогда 
			ДниОтпуск = ДниОтпуск + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Р") <> 0 Тогда 
			ДниОтпускРождение = ДниОтпускРождение + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Б") <> 0 Тогда 
			ДниБолезнь = ДниБолезнь + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"У") <> 0 Тогда 
			ДниУчебныйОтпуск = ДниУчебныйОтпуск + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Г") <> 0 Тогда 
			ДниПрочиеНеявки = ДниПрочиеНеявки + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"П") <> 0 Тогда 
			ДниПрогул = ДниПрогул + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"А") <> 0 Тогда 
			ДниРазрешениеАдмин = ДниРазрешениеАдмин + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Д") <> 0 Тогда 
			ДниД = ДниД + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Н") <> 0 Тогда 
			ДниН = ДниН + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"Х") <> 0 Тогда 
			ДниХ = ДниХ + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"С") <> 0 Тогда 
			ДниС = ДниС + 1;
		КонецЕсли;
		Если СтрНайти(ТекущийДень,"В") <> 0 Тогда 
			ДниВ = ДниВ + 1;
		КонецЕсли;
	КонецЦикла;
	
	СтрокаТаблицы.ДниФактическойРаботы									= ДниФактическойРаботы;
	СтрокаТаблицы.Коммандировки											= ДниКоммандировки;
	СтрокаТаблицы.ЕжегодныйТрудовойОтпуск								= ДниОтпуск;
	СтрокаТаблицы.ОтпускВСвязиСРождениемРебенка							= ДниОтпускРождение;
	СтрокаТаблицы.Болезнь												= ДниБолезнь;
	СтрокаТаблицы.УчебныйОтпуск											= ДниУчебныйОтпуск;
	СтрокаТаблицы.ПрочиеНеявкиРазрешенныеЗаконом						= ДниПрочиеНеявки;
	СтрокаТаблицы.Прогул												= ДниПрогул;
	СтрокаТаблицы.СРазрешенияАдминистрации								= ДниРазрешениеАдмин;
	СтрокаТаблицы.НаРаботуДоПриемаИПослеУвольнения						= ДниД;
	СтрокаТаблицы.ОпозданияИПреждевременныйУход							= ДниН;
	СтрокаТаблицы.НаРаботуДоПереводаИПослеВозвращенияНаСвоеРабочееМесто	= ДниХ;
	СтрокаТаблицы.ОтпускССохранениемЗППоКолДоговору						= ДниС;
	СтрокаТаблицы.ВыходныеИПраздничныеДни								= ДниВ;
	
	СтрокаТаблицы.ВсегоДнейВМесяце										= День(КонецМесяца(Объект.Месяц));
	//СтрокаТаблицы.ВсегоОтработанноеКоличествоЧасов						= ВсегоЧасов;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПодразделениюНаСервере()
	
	ПерсоналВДокументе = ОбщегоНазначения.ВыгрузитьКолонку(Объект.Табель, "Персонал");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Персонал.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Персонал КАК Персонал
	|ГДЕ
	|	НЕ Персонал.ПометкаУдаления
	|	И Персонал.ТиповоеПодразделение В ИЕРАРХИИ(&ТиповоеПодразделение)
	|	И Персонал.Предприятие = &Предприятие
	|	И НЕ Персонал.Ссылка В (&ПерсоналВДокументе)";
	
	Запрос.УстановитьПараметр("ТиповоеПодразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Предприятие", Объект.Предприятие);
	Запрос.УстановитьПараметр("ПерсоналВДокументе", ПерсоналВДокументе);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Стр = Объект.Табель.Добавить();
		Стр.Персонал = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоИспользованиямРесурсовНаСервере(ПерсоналФильтр = Неопределено)
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано подразделение", , , "Объект.Подразделение", Отказ);
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Объект.Месяц) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан месяц", , , "Объект.Месяц", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	РеквизитОбъект = РеквизитФормыВЗначение("Объект");
	РеквизитОбъект.ЗаполнитьПоИспользованиямРесурсов();
	ЗначениеВРеквизитФормы(РеквизитОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВопросаОчисткаТабеля(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если Не ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Табель.Очистить();
	
	ЗаполнитьПоИспользованиямРесурсовНаСервере();
	
КонецПроцедуры

&НаСервере
Функция ПредприятиеЭлементаПерсонала(Персонал)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Персонал, "Предприятие");
	
КонецФункции

&НаСервере
Процедура ОтсортироватьПоПредприятиюНаСервере()
	
	Объект.Табель.Сортировать("Предприятие");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоИспользованиямРесурсовПерсонал(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЗакрыватьПриВыборе", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоИспользованиямРесурсовПерсоналЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Персонал.ФормаВыбора", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоИспользованиямРесурсовПерсоналЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоИспользованиямРесурсовНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтоговыеПоляВСтрокеТабеля(СтрокаТабеля)
	
		
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСтрокуТабеля(Команда)
	
	ТекущаяСтрокаТабеля = Элементы.Табель.ТекущиеДанные;
	
	Если ТекущаяСтрокаТабеля = Неопределено Тогда		
		Возврат;
	КонецЕсли; 
	
	МассивСтруктурСтроки = Новый Массив; 
	
	Для СчетчикДней = 1 По 31 Цикл
		
		СтруктураСтроки = Новый Структура("НомерДня, ПричинаОтсутствия, Часы");
		СтруктураСтроки.НомерДня = СчетчикДней;
		СтруктураСтроки.ПричинаОтсутствия = ТекущаяСтрокаТабеля["ПричинаОтсутствия" + СчетчикДней];
		СтруктураСтроки.Часы = ТекущаяСтрокаТабеля["Число" + СчетчикДней];
		
		МассивСтруктурСтроки.Добавить(СтруктураСтроки);
		
	КонецЦикла; 
	
	ПараметрыРедактирования = Новый Структура("СтруктураСтроки", МассивСтруктурСтроки);
	
	СтруктураДопПараметровОповещения = Новый Структура("ИдентификаторСтроки", ТекущаяСтрокаТабеля.ПолучитьИдентификатор());
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеРедактированияСтрокиТабеля", ЭтотОбъект, СтруктураДопПараметровОповещения);
	
	ОткрытьФорму("Документ.ТабельУчетаИспользованияРабочегоВремени.Форма.ФормаРедактированияСтрокиТабеля", ПараметрыРедактирования, 
		ЭтотОбъект, УникальныйИдентификатор, , , ОписаниеОповещения);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПослеРедактированияСтрокиТабеля(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтрокаДляЗаполнения = Объект.Табель.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
	
	Если СтрокаДляЗаполнения = Неопределено Тогда
		Возврат;		
	КонецЕсли;
	
	ИтогЧасов = 0;
	ДнейРаботы = 0;
	
	Для каждого СтрокаРезультата Из Результат Цикл
		
		НомерТекущегоДня = СтрокаРезультата.НомерДня;
		
		СтрокаДляЗаполнения["Число" + НомерТекущегоДня] = СтрокаРезультата.Часы;
		СтрокаДляЗаполнения["ПричинаОтсутствия" + НомерТекущегоДня] = СтрокаРезультата.ПричинаОтсутствия;
		
		ИтогЧасов = ИтогЧасов + СтрокаРезультата.Часы;
		
		Если Не ЗначениеЗаполнено(СтрокаРезультата.ПричинаОтсутствия) Тогда
			ДнейРаботы = ДнейРаботы + 1;
		КонецЕсли; 
		
	КонецЦикла;
	
	СтрокаДляЗаполнения.ВсегоОтработанноеКоличествоЧасов = ИтогЧасов;
	СтрокаДляЗаполнения.ДниФактическойРаботы = ДнейРаботы;
	
	СобратьИтоПропущенныхДнейПослеРедактирования(ДополнительныеПараметры.ИдентификаторСтроки);
	
КонецПроцедуры

&НаСервере
Процедура СобратьИтоПропущенныхДнейПослеРедактирования(ИдентификаторСтроки)
	
	СтрокаДляЗаполнения = Объект.Табель.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	РеквизитОбъект = РеквизитФормыВЗначение("Объект");
	РеквизитОбъект.СобратьИтогПропущенныхДнейВСтрокеТабеля(СтрокаДляЗаполнения);
	ЗначениеВРеквизитФормы(РеквизитОбъект, "Объект");
	
КонецПроцедуры 
 	  
#КонецОбласти 