
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр Бюджет 
	Движения.ПлановыйБюджетПоПродуктам.Записывать = Истина;
	Для Каждого ТекСтрокаДоходы Из Доходы Цикл
		Если ЗначениеЗаполнено(ТекСтрокаДоходы.Продукт) И ( ЗначениеЗаполнено(ТекСтрокаДоходы.ПланПродаж)
			ИЛИ   ЗначениеЗаполнено(ТекСтрокаДоходы.ПланРасходов)) Тогда
			Движение = Движения.ПлановыйБюджетПоПродуктам.Добавить();
			
			ПериодЗаписи = ТекСтрокаДоходы.Период;
			Если Не ЗначениеЗаполнено(ПериодЗаписи) Тогда 
				ПериодЗаписи = Дата;
			КонецЕсли;
			
			Движение.Период = ПериодЗаписи;
			Движение.Организация = Организация;
			Движение.Сценарий = Сценарий;
			Движение.Подразделение = Подразделение;
			Движение.Продукт = ТекСтрокаДоходы.Продукт;

			Движение.ПланДоходов = ТекСтрокаДоходы.ПланПродаж;
			Движение.ПланРасходов = ТекСтрокаДоходы.ПланРасходов;
		КонецЕсли;
	КонецЦикла;
	
	// регистр Бюджет 
	Движения.БюджетПоПродуктам.Записывать = Истина;
	Для Каждого ТекСтрокаДоходы Из Доходы Цикл
		Если Не ЗначениеЗаполнено(ТекСтрокаДоходы.Проект) Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.БюджетПоПродуктам.Добавить();
		
		ПериодЗаписи = ТекСтрокаДоходы.Период;
		Если Не ЗначениеЗаполнено(ПериодЗаписи) Тогда 
			ПериодЗаписи = Дата;
		КонецЕсли;
			
		Движение.Период = ПериодЗаписи;
		Движение.Организация = Организация;
		Движение.Сценарий = Сценарий;
		Движение.Подразделение = Подразделение;
		Движение.Продукт = ТекСтрокаДоходы.Продукт;
		Движение.Проект = ТекСтрокаДоходы.Проект;
		Движение.Контрагент = ТекСтрокаДоходы.Контрагент;
		Движение.Договор = ТекСтрокаДоходы.Договор;

		Движение.ПланДоходов = ТекСтрокаДоходы.ПланДоходов;
		Движение.ФактДоходы = ТекСтрокаДоходы.ФактДоходы;
		Движение.ПланРасходыПоДоговорам = ТекСтрокаДоходы.ПланРасходыПоДоговорам;
		Движение.ФактРасходы = ТекСтрокаДоходы.ФактРасходы;
		Движение.СуммаПоДоговорамДоходы = ТекСтрокаДоходы.СуммаПоДоговорамДоходы;
		Движение.СуммаПоДоговорамРасходы = ТекСтрокаДоходы.СуммаПоДоговорамРасходы;
	КонецЦикла;

	// регистр Бюджет 
	Движения.БюджетПоСтатьямЗатрат.Записывать = Истина;
	Для Каждого ТекСтрокаАдминистративныеРасходы Из Расходы Цикл
		Если Не ЗначениеЗаполнено(ТекСтрокаАдминистративныеРасходы.Договор) Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.БюджетПоСтатьямЗатрат.Добавить();
		
		ПериодЗаписи = ТекСтрокаАдминистративныеРасходы.Период;
		Если Не ЗначениеЗаполнено(ПериодЗаписи) Тогда 
			ПериодЗаписи = Дата;
		КонецЕсли;
		
		Движение.Период = ПериодЗаписи;
		Движение.Организация = Организация;
		Движение.Сценарий = Сценарий;
		Движение.Подразделение = Подразделение;
		Движение.Контрагент = ТекСтрокаАдминистративныеРасходы.Контрагент;
		Движение.Договор = ТекСтрокаАдминистративныеРасходы.Договор;
		Движение.СтатьяБюджета = ТекСтрокаАдминистративныеРасходы.СтатьяЗатрат;
		Движение.ПланРасходы = ТекСтрокаАдминистративныеРасходы.ПланРасходыПоДоговорам;
		Движение.СуммаПоДоговорамРасходы = ТекСтрокаАдминистративныеРасходы.СуммаПоДоговорамРасходы;
		Движение.ФактРасходы = ТекСтрокаАдминистративныеРасходы.ФактРасходы;
	КонецЦикла;

	// регистр Бюджет 
	Движения.ПлановыйБюджетПоСтатьямЗатрат.Записывать = Истина;
	Для Каждого ТекСтрокаАдминистративныеРасходы Из Расходы Цикл
		Если ЗначениеЗаполнено(ТекСтрокаАдминистративныеРасходы.СтатьяЗатрат) И ЗначениеЗаполнено(ТекСтрокаАдминистративныеРасходы.ПланРасходов) Тогда
			Движение = Движения.ПлановыйБюджетПоСтатьямЗатрат.Добавить();
			
			ПериодЗаписи = ТекСтрокаАдминистративныеРасходы.Период;
			Если Не ЗначениеЗаполнено(ПериодЗаписи) Тогда 
				ПериодЗаписи = Дата;
			КонецЕсли;
			
			Движение.Период = ПериодЗаписи;
			Движение.Организация = Организация;
			Движение.Сценарий = Сценарий;
			Движение.Подразделение = Подразделение;
			Движение.СтатьяЗатрат = ТекСтрокаАдминистративныеРасходы.СтатьяЗатрат;
			Движение.ПланРасходов = ТекСтрокаАдминистративныеРасходы.ПланРасходов;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = Константы.ОрганизацияПоУмолчанию.Получить();
	КонецЕсли;
КонецПроцедуры
