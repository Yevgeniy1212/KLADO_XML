
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПериодЗаявки.ДатаНачала		= Объект.ДатаНачала;
	ПериодЗаявки.ДатаОкончания	= Объект.ДатаОкончания;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	ОбновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ОбновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПересчитатьЦены();
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	ПересчитатьЦены();
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗаявкиПриИзменении(Элемент)
	
	Объект.ДатаНачала		= ПериодЗаявки.ДатаНачала;
	Объект.ДатаОкончания	= ПериодЗаявки.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсеСтатьиЗатрат(Команда)
	ВыбраннаяСтатьяЗатрат = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьВсеСтатьиЗатратЗавершение", ЭтотОбъект, Новый Структура("ВыбраннаяСтатьяЗатрат", ВыбраннаяСтатьяЗатрат)), ВыбраннаяСтатьяЗатрат,"Выберите статью затрат",Тип("СправочникСсылка.СтатьиЗатрат"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсеСтатьиЗатратЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ВыбраннаяСтатьяЗатрат = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбраннаяСтатьяЗатрат, Значение);
	
	Если Значение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПерсонал Тогда 
		ОбрабатываемаяТаблица = Объект.Персонал;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДеньги Тогда
		ОбрабатываемаяТаблица = Объект.Деньги;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнструменты Тогда
		ОбрабатываемаяТаблица = Объект.Инструменты;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаМатериалы Тогда
		ОбрабатываемаяТаблица = Объект.Материалы;
	Иначе
		Возврат
	КонецЕсли;
	
	Для Каждого Стр Из ОбрабатываемаяТаблица Цикл
		Стр.СтатьяЗатрат = ВыбраннаяСтатьяЗатрат;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыбранныеСтатьиЗатрат(Команда)
	ВыбраннаяСтатьяЗатрат = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьВыбранныеСтатьиЗатратЗавершение", ЭтотОбъект, Новый Структура("ВыбраннаяСтатьяЗатрат", ВыбраннаяСтатьяЗатрат)), ВыбраннаяСтатьяЗатрат,"Выберите статью затрат",Тип("СправочникСсылка.СтатьиЗатрат"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВыбранныеСтатьиЗатратЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ВыбраннаяСтатьяЗатрат = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбраннаяСтатьяЗатрат, Значение);
	
	Если Значение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПерсонал Тогда 
		ОбрабатываемаяТаблица = Объект.Персонал;
		МассивИдентификаторов = Элементы.Персонал.ВыделенныеСтроки;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДеньги Тогда
		ОбрабатываемаяТаблица = Объект.Деньги;
		МассивИдентификаторов = Элементы.Деньги.ВыделенныеСтроки;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнструменты Тогда
		ОбрабатываемаяТаблица = Объект.Инструменты;
		МассивИдентификаторов = Элементы.Инструменты.ВыделенныеСтроки;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаМатериалы Тогда
		ОбрабатываемаяТаблица = Объект.Материалы;
		МассивИдентификаторов = Элементы.Материалы.ВыделенныеСтроки;
	Иначе
		Возврат
	КонецЕсли;
	
	Для Каждого ЭлементМассиваВыделенных Из МассивИдентификаторов Цикл
		Стр = ОбрабатываемаяТаблица.НайтиПоИдентификатору(ЭлементМассиваВыделенных);
		Если Стр <> Неопределено Тогда 
			Стр.СтатьяЗатрат = ВыбраннаяСтатьяЗатрат;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыеСтатьиЗатрат(Команда)
	ВыбраннаяСтатьяЗатрат = ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьПустыеСтатьиЗатратЗавершение", ЭтотОбъект, Новый Структура("ВыбраннаяСтатьяЗатрат", ВыбраннаяСтатьяЗатрат)), ВыбраннаяСтатьяЗатрат,"Выберите статью затрат",Тип("СправочникСсылка.СтатьиЗатрат"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыеСтатьиЗатратЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ВыбраннаяСтатьяЗатрат = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбраннаяСтатьяЗатрат, Значение);
	
	Если Значение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПерсонал Тогда 
		ОбрабатываемаяТаблица = Объект.Персонал;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДеньги Тогда
		ОбрабатываемаяТаблица = Объект.Деньги;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаИнструменты Тогда
		ОбрабатываемаяТаблица = Объект.Инструменты;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаМатериалы Тогда
		ОбрабатываемаяТаблица = Объект.Материалы;
	Иначе
		Возврат
	КонецЕсли;
	
	Для Каждого Стр Из ОбрабатываемаяТаблица Цикл
		Если Не ЗначениеЗаполнено(Стр.СтатьяЗатрат) Тогда 
			Стр.СтатьяЗатрат = ВыбраннаяСтатьяЗатрат;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииТабличнойЧастиПерсонал

&НаКлиенте
Процедура ПерсоналПриИзменении(Элемент)
	ОбновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналДолжностьПриИзменении(Элемент)
	Стр			= Элементы.Персонал.ТекущиеДанные;
	Стр.Цена	= ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Должность, Объект.Дата); 
	ОбработатьСтрокуПерсонал();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналКоличествоСтавокПриИзменении(Элемент)
	ОбработатьСтрокуПерсонал();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналКоличествоЧасовПриИзменении(Элемент)
	ОбработатьСтрокуПерсонал();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналЦенаПриИзменении(Элемент)
	ОбработатьСтрокуПерсонал();
КонецПроцедуры

&НаКлиенте
Процедура ПерсоналСуммаПриИзменении(Элемент)
	ОбработатьСтрокуПерсонал();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтрокуПерсонал()
	Стр = Элементы.Персонал.ТекущиеДанные;
	Стр.Сумма = Стр.Цена * Стр.КоличествоСтавок * Стр.КоличествоЧасов;	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииТабличнойЧастиДеньги

&НаКлиенте
Процедура ДеньгиПриИзменении(Элемент)
	ОбновитьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииТабличнойЧастиИнструменты

&НаКлиенте
Процедура ИнструментыПриИзменении(Элемент)
	ОбновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ИнструментыИнструментПриИзменении(Элемент)
	Стр			= Элементы.Инструменты.ТекущиеДанные;
	Стр.Цена	= ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Инструмент, Объект.Дата); 
	ОбработатьСтрокуИнструменты();
КонецПроцедуры

&НаКлиенте
Процедура ИнструментыКоличествоЧасовПриИзменении(Элемент)
	ОбработатьСтрокуИнструменты();
КонецПроцедуры

&НаКлиенте
Процедура ИнструментыЦенаПриИзменении(Элемент)
	ОбработатьСтрокуИнструменты();
КонецПроцедуры

&НаКлиенте
Процедура ИнструментыСуммаПриИзменении(Элемент)
	ОбработатьСтрокуИнструменты();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтрокуИнструменты()
	Стр = Элементы.Инструменты.ТекущиеДанные;
	Стр.Сумма = Стр.Цена * Стр.КоличествоЧасов;	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииТабличнойЧастиМатериалы

&НаКлиенте
Процедура МатериалыПриИзменении(Элемент)
	ОбновитьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыМатериалПриИзменении(Элемент)
	Стр			= Элементы.Материалы.ТекущиеДанные;
	Стр.Цена	= ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Материал, Объект.Дата); 
	ОбработатьСтрокуМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыКоличествоПриИзменении(Элемент)
	ОбработатьСтрокуМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыЦенаПриИзменении(Элемент)
	ОбработатьСтрокуМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура МатериалыСуммаПриИзменении(Элемент)
	ОбработатьСтрокуМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтрокуМатериалы()
	Стр = Элементы.Материалы.ТекущиеДанные;
	Стр.Сумма = Стр.Цена * Стр.Количество;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ЗаполнитьНаСервере()
	Документы.ЗаявкаНаРесурсы.ЗаполнитьПоОснованиюЗадачи(Объект, Объект.Задача);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	//Если Объект.Ресурсы.Количество() > 0 Тогда
	//	ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтаФорма), "Табличная часть не пуста. Очистить перед заполнением?", РежимДиалогаВопрос.ДаНетОтмена);
	//Иначе
	//	ЗаполнитьНаСервере();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение(Результат, Доппараметры)Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		//Объект.Ресурсы.Очистить();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;	
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	Объект.АдминистраторДоговора = ПолучитьАдминистратора(Объект.Договор);
КонецПроцедуры

&НаКлиенте
Процедура ЗадачаПриИзменении(Элемент)
	Объект.АдминистраторЗадачи = ПолучитьАдминистратора(Объект.Задача);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдминистратора(СсылкаНаОбъект)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, "Администратор");		
КонецФункции

&НаКлиенте
Процедура ПересчитатьЦены()
	
	Если Объект.Персонал.Количество() = 0 И Объект.Материалы.Количество() = 0 И Объект.Инструменты.Количество() = 0 Тогда 
		Возврат	
	КонецЕсли;
	
	Ответ = Неопределено;
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПересчитатьЦеныЗавершение", ЭтотОбъект), "Изменилась организация и/или сценарий. Пересчитать цены?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьЦеныЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПересчитатьЦеныНаСервере();
	КонецЕсли;
	
	ОбновитьСуммуДокумента();

КонецПроцедуры

&НаСервере
Процедура ПересчитатьЦеныНаСервере()
	
	Для Каждого Стр Из Объект.Персонал Цикл
		Стр.Цена = ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Должность, Объект.Дата);
		Стр.Сумма = Стр.Цена * Стр.КоличествоСтавок * Стр.КоличествоЧасов;
	КонецЦикла;
	
	Для Каждого Стр Из Объект.Материалы Цикл
		Стр.Цена = ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Материал, Объект.Дата);
		Стр.Сумма = Стр.Цена * Стр.Количество;
	КонецЦикла;
	
	Для Каждого Стр Из Объект.Инструменты Цикл
		Стр.Цена = ПолучитьЦенуНаРесурс(Объект.Организация, Объект.Сценарий, Стр.Инструмент, Объект.Дата);
		Стр.Сумма = Стр.Цена * Стр.КоличествоЧасов;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦенуНаРесурс(Организация, Сценарий, Ресурс, ДатаРасчета = Неопределено)  
	
	Если Не ЗначениеЗаполнено(ДатаРасчета) Тогда 
		ДатаРасчета = ТекущаяДата();	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПлановыеЦеныНаРесурсыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ПлановыеЦеныНаРесурсы.СрезПоследних(
		|			&ДатаРасчета,
		|			Организация = &Организация
		|				И Ресурс = &Ресурс
		|				И Сценарий = &Сценарий) КАК ПлановыеЦеныНаРесурсыСрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаРасчета",	ДатаРасчета);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("Ресурс",			Ресурс);
	Запрос.УстановитьПараметр("Сценарий",		Сценарий);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Цена
	КонецЦикла;
	
	Возврат 0

КонецФункции

&НаКлиенте
Процедура ОбновитьСуммуДокумента()
	Объект.СуммаДокумента = Объект.Персонал.Итог("Сумма") + Объект.Деньги.Итог("Сумма") + Объект.Инструменты.Итог("Сумма") + Объект.Материалы.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗадачиДоговора(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Договор) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен договор", , "Договор", "Объект.Договор");
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЗаявкаНаРесурсы.Форма.ЗадачиДоговора", Новый Структура("Договор", Объект.Договор), ЭтотОбъект,
		УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти
