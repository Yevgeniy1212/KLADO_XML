#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Задачи") Тогда
		Документы.ЗаявкаНаРесурсы.ЗаполнитьПоОснованиюЗадачи(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Договоры") Тогда
		Документы.ЗаявкаНаРесурсы.ЗаполнитьПоОснованиюДоговора(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = Константы.ОрганизацияПоУмолчанию.Получить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если Статус = Перечисления.СтатусыЗаявкиНаРесурсы.ОтправленоНаСогласование
		И Согласующие.Найти(Ложь, "Согласовал") = Неопределено тогда
		Статус = Перечисления.СтатусыЗаявкиНаРесурсы.Согласовано;
	ИначеЕсли Статус = Перечисления.СтатусыЗаявкиНаРесурсы.Согласовано
		И НЕ Согласующие.Найти(Ложь, "Согласовал") = Неопределено Тогда
		Статус = Перечисления.СтатусыЗаявкиНаРесурсы.ОтправленоНаСогласование;
	КонецЕсли;
	Если НЕ Константы.УчетПоОрганизациям.Получить() И Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = Константы.ОрганизацияПоУмолчанию.Получить();
	КонецЕсли;
	СуммаДокумента = Персонал.Итог("Сумма") + Деньги.Итог("Сумма") + Инструменты.Итог("Сумма") + Материалы.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ЗаявкиНаРесурсы 
	Движения.ЗаявкиНаРесурсы.Записывать = Истина;
	Движения.ЗаявкиНаРесурсыДС.Записывать = Истина;
	Для Каждого ТекСтрокаПерсонал Из Персонал Цикл
		Движение = Движения.ЗаявкиНаРесурсы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Проект = Проект;
		Движение.Договор = Договор;
		Движение.Задача = Задача;
		Движение.Ресурс = ТекСтрокаПерсонал.Должность;
		Движение.ДатаНачала = ДатаНачала;
		Движение.ДатаОкончания = ДатаОкончания;
		Движение.Количество = 0;
		Движение.КоличествоСтавок = ТекСтрокаПерсонал.КоличествоСтавок;
		Движение.КоличествоЧасов = ТекСтрокаПерсонал.КоличествоЧасов;
		Движение.СтатусЗаявки = Статус;
	КонецЦикла;

	Для Каждого ТекСтрока Из Инструменты Цикл
		Движение = Движения.ЗаявкиНаРесурсы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Проект = Проект;
		Движение.Договор = Договор;
		Движение.Задача = Задача;
		Движение.Ресурс = ТекСтрока.Инструмент;
		Движение.ДатаНачала = ДатаНачала;
		Движение.ДатаОкончания = ДатаОкончания;
		Движение.Количество = 0;
		Движение.КоличествоСтавок = 0;
		Движение.КоличествоЧасов = ТекСтрока.КоличествоЧасов;
		Движение.СтатусЗаявки = Статус;
	КонецЦикла;

	Для Каждого ТекСтрока Из Материалы Цикл
		Движение = Движения.ЗаявкиНаРесурсы.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Проект = Проект;
		Движение.Договор = Договор;
		Движение.Задача = Задача;
		Движение.Ресурс = ТекСтрока.Материал;
		Движение.ДатаНачала = ДатаНачала;
		Движение.ДатаОкончания = ДатаОкончания;
		Движение.Количество = ТекСтрока.Количество;
		Движение.КоличествоСтавок = 0;
		Движение.КоличествоЧасов = 0;
		Движение.СтатусЗаявки = Статус;
	КонецЦикла;

	// регистр ЗаявкиНаРесурсыДС 
	Для Каждого ТекСтрокаДеньги Из Деньги Цикл
		Движение = Движения.ЗаявкиНаРесурсыДС.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Проект = Проект;
		Движение.Договор = Договор;
		Движение.КонтрагентЗаявки = ТекСтрокаДеньги.Контрагент;
		Движение.ДоговорЗаявки = ТекСтрокаДеньги.Договор;
		Движение.Задача = Задача;
		Движение.ДатаНачала = ДатаНачала;
		Движение.ДатаОкончания = ДатаОкончания;
		Движение.Сумма = ТекСтрокаДеньги.Сумма;
		Движение.СтатусЗаявки = Статус;
	КонецЦикла;
	
	Если Статус = Перечисления.СтатусыЗаявкиНаРесурсы.ОтправленоНаСогласование тогда
		СоздатьЗадачиНаСогласование();
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

Процедура СоздатьЗадачиНаСогласование()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаРесурсыСогласующие.Ссылка КАК Ссылка,
		|	ЗаявкаНаРесурсыСогласующие.Сотрудник КАК Сотрудник,
		|	ЗаявкаНаРесурсыСогласующие.Согласовал КАК Согласовал,
		|	Пользователи.Ссылка КАК Пользователь
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.ЗаявкаНаРесурсы.Согласующие КАК ЗаявкаНаРесурсыСогласующие
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ЗаявкаНаРесурсыСогласующие.Сотрудник = Пользователи.Сотрудник
		|ГДЕ
		|	НЕ ЗаявкаНаРесурсыСогласующие.Согласовал
		|	И ЗаявкаНаРесурсыСогласующие.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка,
		|	ЗадачаИсполнителя.Предмет КАК Предмет,
		|	ЗадачаИсполнителя.Выполнена КАК Выполнена,
		|	ЗадачаИсполнителя.Исполнитель КАК Исполнитель
		|ПОМЕСТИТЬ ВТ_Задачи
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.Предмет = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Ссылка КАК Ссылка,
		|	ВТ.Сотрудник КАК Сотрудник,
		|	ВТ.Согласовал КАК Согласовал,
		|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ВТ.Ссылка) КАК Представление,
		|	ВТ.Пользователь КАК Пользователь,
		|	ВТ.Пользователь.Представление КАК ПользовательПредставление
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Задачи КАК ВТ_Задачи
		|		ПО ВТ.Ссылка = ВТ_Задачи.Предмет
		|			И ВТ.Пользователь = ВТ_Задачи.Исполнитель
		|ГДЕ
		|	ВТ_Задачи.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//создаем задачу адресату
		НоваяЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
		НоваяЗадача.Дата = ТекущаяДатаСеанса();
		НоваяЗадача.Наименование = "Согласование заявки на ресурсы " + ВыборкаДетальныеЗаписи.Представление;
		НоваяЗадача.Автор = Ответственный;
		НоваяЗадача.АвторСтрокой = Строка(Ответственный);
		НоваяЗадача.Исполнитель = ВыборкаДетальныеЗаписи.Пользователь;
		НоваяЗадача.Важность = Перечисления.ВариантыВажностиЗадачи.Высокая;
		НоваяЗадача.Предмет = Ссылка;
		НоваяЗадача.ПредметСтрокой = ВыборкаДетальныеЗаписи.Представление;
		
		ТекстОписание = СтрШаблон("%1
								|Пользователь %2 отправил запрос на согласование заявки.",
								НоваяЗадача.ПредметСтрокой,
								НоваяЗадача.АвторСтрокой);
		НоваяЗадача.Описание = ТекстОписание;
		НоваяЗадача.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли


