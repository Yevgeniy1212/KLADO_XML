#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КодыСкладаПользователей.КодСклада КАК КодСклада
	|ИЗ
	|	РегистрСведений.КодыСкладаПользователей КАК КодыСкладаПользователей
	|ГДЕ
	|	КодыСкладаПользователей.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Элементы.КодСклада.СписокВыбора.Добавить(РезультатЗапроса.КодСклада);
	КонецЦикла; 
	
	Элементы.КодСклада.РежимВыбораИзСписка = Элементы.КодСклада.СписокВыбора.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	АдресТаблицыМатериалов = ПоместитьТаблицуМатериаловВоВременноеХранилище();
	Закрыть(АдресТаблицыМатериалов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМатериал(Команда)
	
	ТекущиеДанныеМатериалы = Элементы.ТаблицаМатериалов.ТекущиеДанные;
	ПоказатьЗначение( , ТекущиеДанныеМатериалы.Материал);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьМатериалы(Команда)
	
	Если Не ЗначениеЗаполнено(КодСклада) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнен код склада'"), , "КодСклада");
		Возврат;
	КонецЕсли; 
	
	ТаблицаМатериалов.Очистить();
	
	ПодобратьМатериалыНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПодготовитьПараметрыЗапросаВКУФИБ()
	
	ЛогинКонстанта  = Константы.ЛогинСервисаКладоВКУФИБ.Получить();
	ПарольКонстанта = Константы.ПарольСервисаКладоВКУФИБ.Получить();
	
	ПараметрыАутентификации = Новый Структура;
	ПараметрыАутентификации.Вставить("Тип",          "Basic");
	ПараметрыАутентификации.Вставить("Пользователь", ЛогинКонстанта);
	ПараметрыАутентификации.Вставить("Пароль",       ПарольКонстанта);
		
	СтруктураТелаЗапроса = Новый Структура;
	СтруктураТелаЗапроса.Вставить("СписокСкладов", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КодСклада));
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Аутентификация", ПараметрыАутентификации);
	СтруктураРезультат.Вставить("Таймаут",        30);
	СтруктураРезультат.Вставить("JSON",           СтруктураТелаЗапроса);

	Возврат СтруктураРезультат;
	
КонецФункции
 
&НаСервереБезКонтекста
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки)
	
	ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("ПодборНоменклатурыЕжеднИспользованиеРесурсов",
		УровеньЖурналаРегистрации.Ошибка, 
		Метаданные.Документы.ЕжедневноеИспользованиеРесурсов,
		,
		ТекстОшибки);
	
КонецПроцедуры
 
&НаСервере
Функция ПолучитьСоответствиеКодМатериал(ТелоОтветаКУФИБ)
	
	КодыМатериалов = Новый Массив;
	
	Для каждого СтрокаТелаОтвета Из ТелоОтветаКУФИБ Цикл
		
		КодыМатериалов.Добавить(СтрокаТелаОтвета.НоменклатураКод);
		
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Материалы.Ссылка КАК Ссылка,
	|	Материалы.Код КАК Код,
	|	Материалы.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Код В(&КодыМатериалов)";
	Запрос.УстановитьПараметр("КодыМатериалов", КодыМатериалов);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	СоответствиеРезультат = Новый Соответствие;
		
	Пока РезультатЗапроса.Следующий() Цикл
		
		СтруктураМатериала = Новый Структура("Ссылка, ЕдиницаИзмерения");
		
		ЗаполнитьЗначенияСвойств(СтруктураМатериала, РезультатЗапроса); 
		
		СоответствиеРезультат.Вставить(РезультатЗапроса.Код, СтруктураМатериала);
		
	КонецЦикла; 
	
	Возврат СоответствиеРезультат;
	
КонецФункции

&НаСервере
Функция ПоместитьТаблицуМатериаловВоВременноеХранилище()
	
	ВыбранныеМатериалы = ТаблицаМатериалов.Выгрузить(Новый Структура("Пометка", Истина));
	Возврат ПоместитьВоВременноеХранилище(ВыбранныеМатериалы);
	
КонецФункции

&НаСервере
Процедура ПодобратьМатериалыНаСервере()
	
	АдресСервисаКУФИБ = Константы.АдресСервисаКладоВКУФИБ.Получить();
	
	ПараметрыЗапросаВКУФИБ = ПодготовитьПараметрыЗапросаВКУФИБ();
	
	Попытка
		РезультатЗапросаВКУФИБ = КоннекторHTTP.Get(АдресСервисаКУФИБ, , ПараметрыЗапросаВКУФИБ);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не удалось получить данные из КУФИБ'"));
		
		ШаблонОшибки = НСтр("ru = 'Адрес сервиса: %1, пользователь: %2'");
		
		ЗаписатьОшибкуВЖурналРегистрации(
		СтрШаблон(ШаблонОшибки, АдресСервисаКУФИБ, ПараметрыЗапросаВКУФИБ.Аутентификация.Пользователь));
		
		Возврат;
	КонецПопытки;
	
	Если РезультатЗапросаВКУФИБ.КодСостояния <> 200 Тогда		
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не удалось получить данные. Возникла ошибка на стороне КУФИБ'"));
		
		ЗаписатьОшибкуВЖурналРегистрации(
		"Ошибка в КУФИБ: " + ПолучитьСтрокуИзДвоичныхДанных(РезультатЗапросаВКУФИБ.Тело, РезультатЗапросаВКУФИБ.Кодировка) + 
		"Код состояния: "  + РезультатЗапросаВКУФИБ.КодСостояния);
		
		Возврат;
	КонецЕсли;
	
	ПараметрыПреобразованияJSON = Новый Структура;
	ПараметрыПреобразованияJSON.Вставить("ПрочитатьВСоответствие",       Ложь);
	ПараметрыПреобразованияJSON.Вставить("ФорматДатыJSON",               ФорматДатыJSON.ISO);
	ПараметрыПреобразованияJSON.Вставить("ИменаСвойствСоЗначениямиДата", "Дата");
	
	ТелоОтветаКУФИБ = КоннекторHTTP.JsonВОбъект(РезультатЗапросаВКУФИБ.Тело, , ПараметрыПреобразованияJSON);
	
	СоответствиеКодМатериал = ПолучитьСоответствиеКодМатериал(ТелоОтветаКУФИБ);
	
	Для каждого СтрокаРезультата Из ТелоОтветаКУФИБ Цикл
		
		СтруктураМатериала = СоответствиеКодМатериал.Получить(СтрокаРезультата.НоменклатураКод);
		
		Если СтруктураМатериала = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		НоваяСтрокаМатериал = ТаблицаМатериалов.Добавить();
		НоваяСтрокаМатериал.Количество       = СтрокаРезультата.Количество;
		НоваяСтрокаМатериал.Сумма            = СтрокаРезультата.Сумма;
		НоваяСтрокаМатериал.Материал         = СтруктураМатериала.Ссылка;
		НоваяСтрокаМатериал.КодМатериала     = СтрокаРезультата.НоменклатураКод;
		НоваяСтрокаМатериал.Дата             = СтрокаРезультата.Дата;
		НоваяСтрокаМатериал.ЕдиницаИзмерения = СтруктураМатериала.ЕдиницаИзмерения;

		
		Если ЗначениеЗаполнено(НоваяСтрокаМатериал.Количество) Тогда
			НоваяСтрокаМатериал.Цена = НоваяСтрокаМатериал.Сумма / НоваяСтрокаМатериал.Количество;
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры
 
#КонецОбласти 