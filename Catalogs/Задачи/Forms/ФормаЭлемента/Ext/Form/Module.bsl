
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.СторонаЗадачи.ТолькоПросмотр = ЗначениеЗаполнено(Объект.СторонаЗадачи) ;
	Элементы.ЭтапДоговора.ТолькоПросмотр = ЗначениеЗаполнено(Объект.ЭтапДоговора) ;
	Элементы.Владелец.ТолькоПросмотр = ЗначениеЗаполнено(Объект.Владелец) ;
	Элементы.Родитель.ТолькоПросмотр = ЗначениеЗаполнено(Объект.КодовоеНаименование) ИЛИ ЗначениеЗаполнено(Объект.Родитель) ;
	Элементы.КодовоеНаименование.ТолькоПросмотр = Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня") ;
	
	Если параметры.Свойство("СозданаИзДоговора") Тогда
		СозданаИзДоговора = Параметры.СозданаИзДоговора;
	КонецЕсли;
	
	//Если СозданаИзДоговора
	//	И ЗначениеЗаполнено(Объект.Родитель)
	//	И Объект.Родитель.КодовоеНаименование =  ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня") Тогда
	//	Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.ГруппаРезультатовВторогоУровня");
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Владелец) И (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") 
		ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")) Тогда
		ВладелецПриИзмененииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.РаботаСФайлами
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		ГиперссылкаФайлов = МодульРаботаСФайлами.ГиперссылкаФайлов();
		ГиперссылкаФайлов.Размещение = "КоманднаяПанель";
		МодульРаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ГиперссылкаФайлов);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписаниеВремени, "Задача", Объект.Ссылка);
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписаниеВремени, "Сотрудник", Объект.Ссылка);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ТекущийСотрудник = ТекущийПользователь.Сотрудник;
	Если НЕ Объект.Ссылка.Пустая()
		И ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") Тогда
		Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Проект");
	КонецЕсли;
	
	Если НЕ Объект.Ссылка.Пустая()
		И ЗначениеЗаполнено(Объект.Владелец) Тогда
		ТипДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ТипДоговора");
	КонецЕсли;

	Элементы.ДатаОкончания.ТолькоПросмотр = НЕ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")
				И (НЕ ЗначениеЗаполнено(Объект.Владелец) 
				ИЛИ	Объект.Владелец.Администратор <> ТекущийСотрудник);	
	Элементы.ЗапроситьИзменениеДаты.Видимость = Элементы.ДатаОкончания.ТолькоПросмотр;	
	
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
	ПерепискаПоЗадаче.Параметры.УстановитьЗначениеПараметра("Задача", Объект.Ссылка);	
	//КонецЕсли;
	
	Если Объект.ПринятоКИсполнению Тогда 
		Элементы.ФормаПринятьКИсполнению.Пометка		= Истина;
		Элементы.ФормаПринятьКИсполнению.Заголовок		= "Принято к исполнению";
		Элементы.ФормаПринятьКИсполнению.Отображение	= ОтображениеКнопки.КартинкаИТекст;
	КонецЕсли;
	
	УстановитьВидимостьТОИР();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();

	// СтандартныеПодсистемы.РаботаСФайлами
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если ТекущийСотрудник = Объект.Администратор тогда
		Элементы.ДатаОкончания.АвтоОтметкаНезаполненного = Истина;
		Элементы.ДатаОкончания.ЦветФона = WebЦвета.ЗамшаСветлый;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если ПараметрыЗаписи.Свойство("ИзмененияОбработаны") Тогда
	//	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИзмененияОбработаны",  ПараметрыЗаписи.ИзмененияОбработаны);
	//КонецЕсли;
	//// Конец Изменение реквизитов
	КНРодителя = Объект.Родитель.КодовоеНаименование;
	Если Не ЗначениеЗаполнено(Объект.Родитель) 
		И НЕ Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Кодовое наименование не соответствует кодовому наименованию родителя: может быть выбрано только """+"Р1"+ """");
	КонецЕсли;
	//Если КНРодителя = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня")
	//	И НЕ Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.ГруппаРезультатовВторогоУровня") Тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Кодовое наименование не соответствует кодовому наименованию родителя: может быть выбрано только """+"ГР2"+ """");
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.РаботаСФайлами
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент,
			ПараметрыПеретаскивания, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент,
			ПараметрыПеретаскивания, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.Ресурсы.Видимость = Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня") 
					ИЛИ Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня"); 
	ЭтоШаблон = ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов");
	
	Элементы.ГруппаРеквизиты.Видимость = НЕ ЭтоШаблон;
	Элементы.СтраницаСписаниеВремени.Видимость = НЕ ЭтоШаблон;
	
	Элементы.СторонаЗадачи.Доступность = НЕ ((ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") 
		ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")) И ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4"));
	Элементы.ЭтапДоговора.Доступность = НЕ ((ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") 
		ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")) 
		И (ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") ИЛИ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ3")));
		
КонецПроцедуры

&НаКлиенте
Процедура КодовоеНаименованиеПриИзменении(Элемент)
	СписокРодителей = ПолучитьСписокРодителей(Объект.Родитель);
	Если (Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.ГруппаРезультатовВторогоУровня")
		ИЛИ Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.ПодгруппаРезультатовВторогоУровня")
		ИЛИ Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня"))
		И СписокРодителей.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня")) <> Неопределено Тогда
		Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня");
		Сообщить("Нельзя создавать Р1, ГР2 или ПГР2 после Р2!");
		УстановитьВидимость();
		Возврат
	КонецЕсли;
	СписокПоследующих = ПолучитьСписокПоследующих(Объект.Ссылка);
	Если Объект.КодовоеНаименование = ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня")
		И (СписокПоследующих.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня")) <> Неопределено 
		ИЛИ СписокПоследующих.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.УровниClado.ГруппаРезультатовВторогоУровня")) <> Неопределено
		ИЛИ СписокПоследующих.НайтиПоЗначению(ПредопределенноеЗначение("Перечисление.УровниClado.ПодгруппаРезультатовВторогоУровня")) <> Неопределено) Тогда
		Объект.КодовоеНаименование = Неопределено;
		Сообщить("Нельзя создавать Р2 перед Р1, ГР2 или ПГР2!");
	КонецЕсли;
	УстановитьВидимость();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокРодителей(Родитель)
	СписокРодителей = Новый СписокЗначений;
	ДобавитьРодителяВСписокРекурсивно(СписокРодителей, Родитель);
	Возврат СписокРодителей
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьРодителяВСписокРекурсивно(СписокРодителей, Родитель)
	Если НЕ ЗначениеЗаполнено(Родитель) Тогда 
		Возврат;
	Иначе
		СписокРодителей.Добавить(Родитель.КодовоеНаименование);
		ДобавитьРодителяВСписокРекурсивно(СписокРодителей,Родитель.Родитель);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПоследующих(Задача)
	СписокПоследующих = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Задача) Тогда 
		ДобавитьСледующегоВСписокРекурсивно(СписокПоследующих, Задача);
	КонецЕсли;
	Возврат СписокПоследующих
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьСледующегоВСписокРекурсивно(СписокПоследующих, Задача)	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Задачи.КодовоеНаименование КАК КодовоеНаименование,
	|	Задачи.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Задачи КАК Задачи
	|ГДЕ
	|	Задачи.Родитель = &Родитель";
	
	Запрос.УстановитьПараметр("Родитель", Задача);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	Иначе
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СписокПоследующих.Добавить(ВыборкаДетальныеЗаписи.КодовоеНаименование);
			ДобавитьСледующегоВСписокРекурсивно(СписокПоследующих,ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") Тогда
		Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Проект");
	Иначе
		Проект = Неопределено;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда
		ТипДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ТипДоговора");
	Иначе
		ТипДоговора = Неопределено;
	КонецЕсли;
	Если ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ3") Тогда
		Объект.ЭтапДоговора = ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Исполнение");	
	КонецЕсли;
	Если ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") Тогда
		Объект.СторонаЗадачи = 1;
		Объект.ЭтапДоговора = ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Исполнение");	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Владелец) И (ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Договоры") 
		ИЛИ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")) Тогда
		Элементы.КодовоеНаименование.РежимВыбораИзСписка = Истина;
		Элементы.КодовоеНаименование.СписокВыбора.Очистить();
		Элементы.КодовоеНаименование.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.УровниClado.РезультатыПервогоУровня"));
		Элементы.КодовоеНаименование.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.УровниClado.РезультатВторогоУровня"));
		Элементы.КодовоеНаименование.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.УровниClado.ГруппаРезультатовВторогоУровня"));
		Элементы.КодовоеНаименование.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.УровниClado.ПодгруппаРезультатовВторогоУровня"));
	Иначе
		Элементы.КодовоеНаименование.РежимВыбораИзСписка = Ложь;
	КонецЕсли;
	
	Элементы.ДатаОкончания.ТолькоПросмотр = НЕ ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.БиблиотекаПроцессов")
				И (НЕ ЗначениеЗаполнено(Объект.Владелец) 
				ИЛИ	Объект.Владелец.Администратор <> ТекущийСотрудник);	
	Элементы.ЗапроситьИзменениеДаты.Видимость = Элементы.ДатаОкончания.ТолькоПросмотр;	
КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
	УстановитьВидимость();
	УстановитьВидимостьТОИР();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ ПараметрыЗаписи.Свойство("ИзмененияОбработаны") 
	//	И Модифицированность И НЕ Объект.Ссылка.Пустая() Тогда
	//	Отказ = Истина;
	//	ПолучитьИзмененныеРеквизиты();
	//	Если ИзмененияРеквизитов.Количество() > 0 Тогда
	//		ПараметрыОткрытия = Новый Структура();
	//		ПараметрыОткрытия.Вставить("Объект", Объект.Ссылка);
	//		ПараметрыОткрытия.Вставить("АдресХранилища", ПоместитьИзмененияВХранилище(ИзмененияРеквизитов));
	//		ОткрытьФорму("РегистрСведений.ИсторияИзменения.Форма.ФормаИсторииИзменения", ПараметрыОткрытия, ЭтаФорма,,,,Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//	Иначе
	//		Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//	КонецЕсли;
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, ДопПараметры) Экспорт
	//// Начало Изменение реквизитов
	//Если Результат = Неопределено Тогда
	//	Возврат;
	//Иначе
	//	 ЗагрузитьТаблицуИзменений(Результат);
	//	 Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ Отказ Тогда
	//	ИзменениеРеквизитовСервер.ЗаписатьИзмененияРеквизитов(ТекущийОбъект.Ссылка, ИзмененияРеквизитов);
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//ИзмененияРеквизитов.Очистить();
	//// Конец Изменение реквизитов
КонецПроцедуры

// Начало Изменение реквизитов
&НаСервере
Процедура ПолучитьИзмененныеРеквизиты()
	ИзменениеРеквизитовСервер.ПолучитьИзмененныеРеквизиты(РеквизитФормыВЗначение("Объект"), Объект, ИзмененияРеквизитов);
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененияВХранилище(Знач ИзмененияРеквизитов)
	Возврат ПоместитьВоВременноеХранилище(ИзмененияРеквизитов.Выгрузить(), УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция ЗагрузитьТаблицуИзменений(Адрес)
	ИзмененияРеквизитов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецФункции

// Конец Изменение реквизитов

&НаКлиенте
Процедура ЗапроситьИзменениеДаты(Команда)
	ПараметрыОткрытия = Новый Структура("ПереносСрокаЗадачи", истина);
	ПараметрыОткрытия.Вставить("Объект", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("НазваниеРеквизита", "ДатаОкончания");
	ПараметрыОткрытия.Вставить("Пользователь", ТекущийПользователь);
	ПараметрыОткрытия.Вставить("Адресат", ПолучитьАдминистратораДоговора(Объект.Владелец));
	ОткрытьФорму("РегистрСведений.ЗапросНаИзменениеРеквизитов.ФормаЗаписи", ПараметрыОткрытия,,,,,Новый ОписаниеОповещения("ЗапроситьИзменениеДатыЗавершение", ЭтаФорма));
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьИзменениеДатыЗавершение(Результат, ДопПараметры) Экспорт
	Если Не результат = Неопределено тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запрос на изменение даты окончания отправлен.");		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьАдминистратораДоговора(Договор)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Договоры КАК Договоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	               |		ПО Договоры.Администратор = Пользователи.Сотрудник
	               |ГДЕ
	               |	Договоры.Ссылка = &Договор";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено
	КонецЕсли;
КонецФункции


&НаКлиенте
Процедура ДобавитьСообщение(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		Сообщить("Перед добавлением сообщений задачу нужно записать.");
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = "";
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ДобавитьСообщениеЗавершение", ЭтотОбъект, Новый Структура("ТекстСообщения", ТекстСообщения)), ТекстСообщения, "Введите текст сообщения:");
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСообщениеЗавершение(Строка, ДополнительныеПараметры) Экспорт
	
	ТекстСообщения = ?(Строка = Неопределено, ДополнительныеПараметры.ТекстСообщения, Строка);
	
	ДобавитьСообщениеНаСервере(ТекстСообщения, Объект.Ссылка);
	
	Элементы.ПерепискаПоЗадаче.Обновить();

КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДобавитьСообщениеНаСервере(ТекстСообщения, Задача)
	
	НоваяЗапись					= РегистрыСведений.ПерепискаПоЗадачам.СоздатьМенеджерЗаписи();
	НоваяЗапись.Период			= ТекущаяДата();
	НоваяЗапись.Пользователь	= ПараметрыСеанса.ТекущийПользователь;
	НоваяЗапись.Задача			= Задача;
	НоваяЗапись.Текст			= ТекстСообщения;
	НоваяЗапись.Записать();
	
КонецПроцедуры


&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	Если Не Объект.ПринятоКИсполнению Тогда 
		Объект.ПринятоКИсполнению						= Истина;
		Элементы.ФормаПринятьКИсполнению.Пометка		= Истина;
		Элементы.ФормаПринятьКИсполнению.Заголовок		= "Принято к исполнению";
		Элементы.ФормаПринятьКИсполнению.Отображение	= ОтображениеКнопки.КартинкаИТекст;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьТОИР()
	
	Если ТипЗнч(Объект.Владелец) <> Тип("СправочникСсылка.Договоры") Тогда
		Элементы.ГруппаТоир.Видимость = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТипДоговора = Объект.Владелец.ТипДоговора;
	
	ДоступныеТипы = Новый Массив;
	ДоступныеТипы.Добавить(Перечисления.ТипыДоговоров.ДТ1);
	ДоступныеТипы.Добавить(Перечисления.ТипыДоговоров.ДТ2);
	ДоступныеТипы.Добавить(Перечисления.ТипыДоговоров.ДТ4);
	
	Элементы.ГруппаТОИР.Видимость = ДоступныеТипы.Найти(ТипДоговора) <> Неопределено;
	
	//Элементы.ГруппаТОИР.Видимость = Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура РесурсыЦенаПриИзменении(Элемент)
	ТабличныеЧастиКЛАДОКлиент.РассчитатьСуммыВСтрокеТЧ(Элементы.Ресурсы.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура РесурсыКоличествоПриИзменении(Элемент)
	ТабличныеЧастиКЛАДОКлиент.РассчитатьСуммыВСтрокеТЧ(Элементы.Ресурсы.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура РесурсыСуммаПриИзменении(Элемент)
	ТабличныеЧастиКЛАДОКлиент.РассчитатьЦенуВСтрокеТЧ(Элементы.Ресурсы.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура АдминистраторПриИзменении(Элемент)	
	Если Не ЗначениеЗаполнено(Объект.Администратор) Тогда
		Объект.Подразделение = Неопределено;
		Возврат;
	КонецЕсли; 
	
	АдминистраторПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура АдминистраторПриИзмененииНаСервере()
	Объект.Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Администратор, "Подразделение");
КонецПроцедуры
 

