
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ТекущийСотрудник = ТекущийПользователь.Сотрудник;
	Если Не ЗначениеЗаполнено(ТекущийСотрудник) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить текущего сотрудника пользователя!");
	КонецЕсли;
	ОтображатьВсеДанные = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийСотрудник, "Должность.ОтображатьВсеДанные"); 
	Если Не ЗначениеЗаполнено(ОтображатьВсеДанные) Тогда
		//добавляем отбор по объектам
		СписокПроектов = КЛАДО_ОбщийМодульСервер.ПолучитьСписокПроектовТекущегоСотрудника(ТекущийСотрудник);
		СписокДоговоров = КЛАДО_ОбщийМодульСервер.ПолучитьСписокДоговоровРуководителяПодразделения(ТекущийСотрудник);
		ГруппаОтборов = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "Отбор по сотруднику", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Владелец.Проект", СписокПроектов, ВидСравненияКомпоновкиДанных.ВСписке);  
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Владелец", СписокДоговоров, ВидСравненияКомпоновкиДанных.ВСписке);  
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Подразделение.Руководитель", ТекущийСотрудник);  
	КонецЕсли;
	ДобавитьОтборыПоПараметрамСеанса();
	
	ПользовательОтбор = ТекущийПользователь;
	ИсторияИзмененияЗадачСписок.Параметры.УстановитьЗначениеПараметра("Пользователь", ПользовательОтбор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("УстановитьЗаголовокНастроек",10);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьОтборыПоПараметрамСеанса" Тогда
		ДобавитьОтборыПоПараметрамСеанса();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ТекущаяЗадача) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед закрытием необходимо остановить таймер!");
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура НачатьЗадачу(Команда)
	Если Элементы.Список.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	ТекущаяЗадача = ТекущиеДанные.Ссылка;
	Элементы.ФормаНачатьЗадачу.Видимость = Ложь;
	Элементы.ФормаОстановитьТаймер.Видимость = Истина;
	Элементы.ГруппаЗадача.Видимость = Истина;
	ПодключитьОбработчикОжидания("Таймер", 1);
КонецПроцедуры

&НаКлиенте
Процедура СписатьВремя(Команда)
	Если Элементы.Список.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана задача");
		Возврат;		
	КонецЕсли;
	ПоказатьВводДаты(Новый ОписаниеОповещения("СписатьВремяЗавершение", ЭтаФорма, ТекущиеДанные.Ссылка),,,ЧастиДаты.Время);
КонецПроцедуры

&НаКлиенте
Процедура СписатьВремяЗавершение(Рез, Доп)   Экспорт
	Если Рез <> Неопределено
		И НЕ Рез = Дата(1,1,1) Тогда
		ЗаписатьВремя(Доп, Рез, ТекущийСотрудник);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИнициатора(Команда)
	ВыбранныеСтроки = Элементы.Список.ВыделенныеСтроки;
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьИнициатораЗавершение", ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.ФормаИзменениеИнициатора", Новый Структура("МассивСсылок, ТипСсылок", ВыбранныеСтроки, "СписокЗадач"), ЭтаФорма,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИнициатораЗавершение(Рез, ДопПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОтборПриИзменении(Элемент)
	ИсторияИзмененияЗадачСписок.Параметры.УстановитьЗначениеПараметра("Пользователь", ПользовательОтбор);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИзмененияЗадачСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(Новый ОписаниеОповещения("ИсторияИзмененияЗадачСписокВыборЗавершение", ЭтотОбъект), Элементы.ИсторияИзмененияЗадачСписок.ТекущиеДанные.Объект);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияИзмененияЗадачСписокВыборЗавершение(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	ОтображатьТолькоПлан = Истина;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	ОтображатьТолькоПлан = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

&НаСервере
Процедура ДобавитьОтборыПоПараметрамСеанса()
	
	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Администратор"), ПараметрыСеанса.СотрудникОтбор, ЗначениеЗаполнено(ПараметрыСеанса.СотрудникОтбор));
	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Подразделение"), ПараметрыСеанса.ПодразделениеОтбор, ЗначениеЗаполнено(ПараметрыСеанса.ПодразделениеОтбор));
	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Администратор.Организация"), ПараметрыСеанса.ОрганизацияОтбор, ЗначениеЗаполнено(ПараметрыСеанса.ОрганизацияОтбор));
	
	СтатусОтбор	= ПараметрыСеанса.СтатусОтбор;
	Если СтатусОтбор = 1 Тогда
		ОтображатьТолькоПлан = Истина;
	КонецЕсли;
	ОбновитьОтображениеПланФакт();
	
КонецПроцедуры

&НаКлиенте
Процедура Таймер()
	
	ТекущееВремя = ТекущееВремя + 1;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьВремя(Задача, Время, Сотрудник)
	МЗ = РегистрыСведений.СписаниеВремениНаЗадачи.СоздатьМенеджерЗаписи();
	МЗ.Период = ТекущаяДатаСеанса();
	МЗ.Задача = Задача;
	МЗ.Сотрудник = Сотрудник;
	МЗ.Время = Время;
	МЗ.Записать();
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьТаймер(Команда)
	Элементы.ФормаНачатьЗадачу.Видимость = Истина;
	Элементы.ФормаОстановитьТаймер.Видимость = Ложь;
	Элементы.ГруппаЗадача.Видимость = Ложь;
	ОтключитьОбработчикОжидания("Таймер");
	ЗаписатьВремя(ТекущаяЗадача, ТекущееВремя, ТекущийСотрудник);
	ТекущаяЗадача = Неопределено;   
	ТекущееВремя = Дата(1,1,1);
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПланФакт()
	Если ОтображатьТолькоПлан Тогда 
		Элементы.ФормаПлан.Пометка = Истина;
		Элементы.ФормаФакт.Пометка = Ложь;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СтатусЗадачи"), Перечисления.СтатусыЗадач.Планируемая, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе 
		Элементы.ФормаПлан.Пометка = Ложь;
		Элементы.ФормаФакт.Пометка = Истина;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СтатусЗадачи"), Перечисления.СтатусыЗадач.Планируемая, Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗаголовокНастроек()
	
	ТекстОтборов = "Настройки (Отборы:";
	
	ЕстьОтборы = Ложь;
	
	Для Каждого ЭлементПользовательскихНастроек Из Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементПользовательскихНастроек) = Тип("ОтборКомпоновкиДанных") Тогда 
			Для Каждого ЭлементОтбора Из ЭлементПользовательскихНастроек.Элементы Цикл
				Если ЭлементОтбора.Использование Тогда 
					ТекстОтбора = " " + Строка(ЭлементОтбора.ЛевоеЗначение) + " " + ?(ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно,"≠","=") + " " + Строка(ЭлементОтбора.ПравоеЗначение) + ";";
					ТекстОтборов = ТекстОтборов + ТекстОтбора;
					ЕстьОтборы = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;			
	КонецЦикла;
	
	Если ЕстьОтборы Тогда 
		ТекстОтборов = ТекстОтборов + ")";
	Иначе 
		ТекстОтборов = "Настройки";
	КонецЕсли;
	
	Элементы.ГруппаНастройки.Заголовок = ТекстОтборов;
	
КонецПроцедуры

#КонецОбласти











