
Процедура ПередУдалением(Отказ)
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Ссылка.ПометкаУдаления <> ПометкаУдаления Тогда
		//помечаем на удаление все задачи
		Выборка = Справочники.Задачи.Выбрать(, Ссылка);
		Пока Выборка.Следующий() Цикл
			Об = Выборка.Ссылка.ПолучитьОбъект();
			Об.УстановитьПометкуУдаления(ПометкаУдаления);
		КонецЦикла;
	КонецЕсли;
	
	//изменяем статус Проекта
	Если ДополнительныеСвойства.Свойство("СтатусПроекта") Тогда
		ПроектОб = Проект.ПолучитьОбъект();
		ПроектОб.СостояниеИсполнения = ДополнительныеСвойства.СтатусПроекта;
		ПроектОб.Записать();
	КонецЕсли;
	
	// Начало Изменение реквизитов
	Если Константы.ИспользоватьЛогирование.Получить() Тогда
		ЕстьЗаписиВРегистреИзменения = ИзменениеРеквизитовСервер.ЕстьЗаписиВРегистреИзменения(Ссылка);
		Если Не ЕстьЗаписиВРегистреИзменения Тогда
			ИзменениеРеквизитовСервер.ЗаписатьИзмененныеРеквизиты(ЭтотОбъект, Истина);
		КонецЕсли;
		Если НЕ (ДополнительныеСвойства.Свойство("ИзмененияОбработаны")
			И ДополнительныеСвойства.ИзмененияОбработаны) 
			И ЕстьЗаписиВРегистреИзменения Тогда
			ИзменениеРеквизитовСервер.ЗаписатьИзмененныеРеквизиты(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	// Конец Изменение реквизитов
	
	ЗаполнитьДокументСписаниеЧасовПерсонал();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ЭтоНовый() Тогда
		ЕстьПодчиненные = Справочники.Договоры.ЕстьПодчиненныеДоговоры(Ссылка);
	КонецЕсли;
	Родитель = ДоговорОснование;
	Если ЗначениеЗаполнено(ДоговорОснование)
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДоговорОснование, "ЕстьПодчиненные") = Ложь Тогда
		ДогОбРодитель = ДоговорОснование.ПолучитьОбъект();
		ДогОбРодитель.ЕстьПодчиненные = Истина;
		ДогОбРодитель.ОбменДанными.Загрузка = Истина;
		ДогОбРодитель.Записать();
	КонецЕсли;
	
	Если ТипДоговора = Перечисления.ТипыДоговоров.ДТ4 
		И ЗначениеЗаполнено(Контрагент) Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	Если НЕ ТипДоговора = Перечисления.ТипыДоговоров.ДТ1 
		И НЕ ТипДоговора = Перечисления.ТипыДоговоров.ДТ2
		И (ЗначениеЗаполнено(НомерДоговора) ИЛИ ЗначениеЗаполнено(СуммаДоговора)) Тогда
		//СуммаДоговора = 0;
		НомерДоговора = "";
	КонецЕсли;
	
	ПустаяСтатьяЗатрат = Справочники.СтатьиЗатрат.ПустаяСсылка();
	Если НЕ ТипДоговора = Перечисления.ТипыДоговоров.ДТ2 
		И НЕ ТипДоговора = Перечисления.ТипыДоговоров.ДТ4 Тогда
		СтатьяЗатрат = ПустаяСтатьяЗатрат;
		Для Каждого Стр Из Оплаты Цикл
			Стр.СтатьяЗатрат = ПустаяСтатьяЗатрат;			
		КонецЦикла;
	КонецЕсли;
	
	Если ТипДоговора = Перечисления.ТипыДоговоров.ДТ1 
		И Распределения.Количество() > 0 Тогда
		Распределения.Очистить();
		СуммаРаспределенная = 0;
		СуммаПоДоговоруРаспределено = 0;
	Иначе
		СуммаРаспределенная = Распределения.Итог("Сумма");
		СуммаПоДоговоруРаспределено = Распределения.Итог("СуммаДоговора");
	КонецЕсли;
	
	//изменяем статус Проекта
	Если ТипЗнч(Проект) = Тип("СправочникСсылка.Проекты") Тогда
		Если ТипДоговора = Перечисления.ТипыДоговоров.ДТ1 
			ИЛИ ТипДоговора = Перечисления.ТипыДоговоров.ДТ2 Тогда
			Если (НЕ ЗначениеЗаполнено(Проект.СостояниеИсполнения) ИЛИ Проект.СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Планируемый) 
				И (Ссылка.СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Планируемый ИЛИ НЕ ЗначениеЗаполнено(Ссылка.СостояниеИсполнения))
				И (СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Исполняемый
				ИЛИ СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Приоритетный
				ИЛИ СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Выполненный) Тогда
				ДополнительныеСвойства.Вставить("СтатусПроекта", Перечисления.СтатусыДоговоровПроектов.Исполняемый);
			КонецЕсли
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Константы.УчетПоОрганизациям.Получить() И Не ЗначениеЗаполнено(Организация) Тогда 
		Организация = Константы.ОрганизацияПоУмолчанию.Получить();
	КонецЕсли;	
	
	Если ТипДоговора = Перечисления.ТипыДоговоров.ДТ4 И СостояниеИсполнения = Перечисления.СтатусыДоговоровПроектов.Планируемый Тогда 
		СуммаПлан = Персонал.Итог("Сумма") + Деньги.Итог("Сумма") + Инструменты.Итог("Сумма") + Материалы.Итог("Сумма");	
	КонецЕсли;
	
	СуммаНачисленийИзУС = Доходы.Итог("СуммаНачисленийИзУС");
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТекущийСотрудник = Пользователи.ТекущийПользователь().Сотрудник;
	Инициатор = ТекущийСотрудник;
	Если Не ЗначениеЗаполнено(Организация) Тогда 
		Если ЗначениеЗаполнено(Проект) Тогда 
			Организация = Проект.Организация;	
		Иначе 
			Организация = Константы.ОрганизацияПоУмолчанию.Получить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЕстьПодчиненные = Ложь;
	СуммаРаспределенная = 0;
	Распределения.Очистить();
	Оплаты.Очистить();
	СуммаНачисления = 0;
	СуммаДоговора = 0;
	ДоговорОснование = Неопределено;
	ВестиУчетПоДопДоговору = Ложь;
КонецПроцедуры

Процедура ЗаполнитьДокументСписаниеЧасовПерсонал()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеВремениПерсонала.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СписаниеВремениПерсонала КАК СписаниеВремениПерсонала
		|ГДЕ
		|	СписаниеВремениПерсонала.Договор = &Договор";
	
	Запрос.УстановитьПараметр("Договор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
	КонецЦикла;
	
	Если РезультатЗапроса.Пустой() Тогда 
		ДокументОбъект		= Документы.СписаниеВремениПерсонала.СоздатьДокумент();
		ДокументОбъект.Дата	= ТекущаяДата();
	КонецЕсли;
	
	ДокументОбъект.Договор			= Ссылка;
	ДокументОбъект.НачалоПериода	= ДатаНачала;
	ДокументОбъект.КонецПериода		= ДатаОкончания;
	
	ДокументОбъект.Время.Очистить();
	
	Для Каждого Стр Из Персонал Цикл
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Месяц",НачалоМесяца(Стр.ДатаПотребности));
		ПараметрыОтбора.Вставить("Должность",Стр.Должность);
		
		НайдСтроки = ДокументОбъект.Время.НайтиСтроки(ПараметрыОтбора);
		
		Если НайдСтроки.Количество() > 0  Тогда 
			СтрНовая = НайдСтроки[0];
		Иначе
			СтрНовая					= ДокументОбъект.Время.Добавить();
			СтрНовая.Месяц				= НачалоМесяца(Стр.ДатаПотребности);
			СтрНовая.Должность			= Стр.Должность;	
		КонецЕсли;
		
		СтрНовая.КоличествоЧасов	= Макс(Стр.КоличествоЧасовВДень,СтрНовая.КоличествоЧасов);
		
	КонецЦикла;
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры