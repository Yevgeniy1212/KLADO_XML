
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьПривилегированныйРежим(Истина);
	Сценарий = Константы.СценарийПоУмолчанию.Получить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "УстановитьВидимостьКолонок", Ложь) Тогда
		УстановитьВидимостьКолонок(Параметры.Отбор.ТипДоговора);
	КонецЕсли;
	
	ОтображатьТолькоПлан = Истина;
	
	ТекущийСотрудник = Пользователи.ТекущийПользователь().Сотрудник;
	Если Не ЗначениеЗаполнено(ТекущийСотрудник) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить текущего сотрудника пользователя!");
	КонецЕсли;
	ОтображатьВсеДанные = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийСотрудник, "Должность.ОтображатьВсеДанные"); 
	Если Не ЗначениеЗаполнено(ОтображатьВсеДанные) Тогда
		//добавляем отбор по объектам
		СписокПроектов = КЛАДО_ОбщийМодульСервер.ПолучитьСписокПроектовТекущегоСотрудника(ТекущийСотрудник);
		СписокДоговоровПодразделений = КЛАДО_ОбщийМодульСервер.ПолучитьСписокДоговоровРуководителяПодразделения(ТекущийСотрудник);
		ГруппаОтборов = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "Отбор по сотруднику", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Проект", СписокПроектов, ВидСравненияКомпоновкиДанных.ВСписке);  
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Ссылка", СписокДоговоровПодразделений, ВидСравненияКомпоновкиДанных.ВСписке);  
	КонецЕсли;
	ДобавитьОтборыПоПараметрамСеанса();
	УстановитьОтборСценарий();	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура Тест(Команда)
	ОтображатьТолькоТест = Истина;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	ОтображатьТолькоПлан = Истина;
	ОтображатьТолькоТест = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	ОтображатьТолькоПлан = Ложь;
	ОтображатьТолькоТест = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтрагентов(Команда)
	ВыбранныйКонтрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьКонтрагентовЗавершение", ЭтотОбъект, Новый Структура("ВыбранныйКонтрагент", ВыбранныйКонтрагент)), ВыбранныйКонтрагент,"Выберите контрагента",Тип("СправочникСсылка.Контрагенты"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКонтрагентовЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ВыбранныйКонтрагент = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбранныйКонтрагент, Значение);
	
	Если Значение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьКонтрагентовНаСервере(Элементы.Список.ВыделенныеСтроки, ВыбранныйКонтрагент);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьКонтрагентовНаСервере(Знач МассивДоговоров, Контрагент)
	Для Каждого ДоговорСсылка Из МассивДоговоров Цикл
		ДоговорОбъект = ДоговорСсылка.ПолучитьОбъект();
		ДоговорОбъект.Контрагент = Контрагент;
		ДоговорОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдминистраторов(Команда)
	ВыбранныйАдминистратор = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	ПоказатьВводЗначения(Новый ОписаниеОповещения("ЗаполнитьАдминистраторовЗавершение", ЭтотОбъект, Новый Структура("ВыбранныйАдминистратор", ВыбранныйАдминистратор)), ВыбранныйАдминистратор,"Выберите администратора",Тип("СправочникСсылка.Сотрудники"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАдминистраторовЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ВыбранныйАдминистратор = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбранныйАдминистратор, Значение);
	
	Если Значение = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьАдминистраторовНаСервере(Элементы.Список.ВыделенныеСтроки, ВыбранныйАдминистратор);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьАдминистраторовНаСервере(Знач МассивДоговоров, ВыбранныйАдминистратор)
	Для Каждого ДоговорСсылка Из МассивДоговоров Цикл
		ДоговорОбъект = ДоговорСсылка.ПолучитьОбъект();
		ДоговорОбъект.Администратор = ВыбранныйАдминистратор;
		ДоговорОбъект.Записать();
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура ОбновитьОтображениеПланФакт()
	
	МассивСтатусов = Новый Массив;
	
	Если ОтображатьТолькоПлан Тогда 
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Планируемый);
	Иначе
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Исполняемый);
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Выполненный);
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Просроченный);
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Отмененный);
		МассивСтатусов.Добавить(Перечисления.СтатусыДоговоровПроектов.Приоритетный);
	КонецЕсли;
	
	Элементы.ФормаПлан.Пометка = ОтображатьТолькоПлан;
	Элементы.ФормаФакт.Пометка = Не ОтображатьТолькоПлан;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СостояниеИсполнения",
		МассивСтатусов, ВидСравненияКомпоновкиДанных.ВСписке);
		
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура УстановитьВидимостьКолонок(ТипДоговора)
	Элементы.НомерДоговора.Видимость = ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ1") ИЛИ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ2");	
	Элементы.Контрагент.Видимость =  НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4"); 	
	Элементы.СуммаДоговора.Видимость = ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ2");	
	Элементы.СуммаНачисления.Видимость = ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ1");	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОтборыПоПараметрамСеанса()
	
	СотрудникОтбор		= ПараметрыСеанса.СотрудникОтбор;
	ПодразделениеОтбор	= ПараметрыСеанса.ПодразделениеОтбор;
	ОрганизацияОтбор	= ПараметрыСеанса.ОрганизацияОтбор;
	СтатусОтбор			= ПараметрыСеанса.СтатусОтбор;
	
	Если ЗначениеЗаполнено(СотрудникОтбор) ИЛИ ЗначениеЗаполнено(ПодразделениеОтбор) Тогда
		СписокДоговоров = КЛАДО_ОбщийМодульСервер.ПолучитьСписокДоговоровАдминистраторЗадачи(СотрудникОтбор, ПодразделениеОтбор);
	Иначе 
		СписокДоговоров = Новый Массив;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Ссылка", СписокДоговоров, 
		ВидСравненияКомпоновкиДанных.ВСписке, , ЗначениеЗаполнено(СотрудникОтбор) ИЛИ ЗначениеЗаполнено(ПодразделениеОтбор));
		
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Организация", ОрганизацияОтбор, 
		ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(ОрганизацияОтбор));

	
	//КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Ссылка"), СписокДоговоров, ЗначениеЗаполнено(СотрудникОтбор) ИЛИ ЗначениеЗаполнено(ПодразделениеОтбор), ВидСравненияКомпоновкиДанных.ВСписке);
	//КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Организация"), ОрганизацияОтбор, ЗначениеЗаполнено(ОрганизацияОтбор), ВидСравненияКомпоновкиДанных.Равно);
	//Если СтатусОтбор = 0 Тогда 
	//	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Ложь, ВидСравненияКомпоновкиДанных.Равно);
	//ИначеЕсли СтатусОтбор = 1 Тогда
	//	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	//	ОтображатьТолькоПлан = Истина;
	//ИначеЕсли СтатусОтбор = 2 Тогда
	//	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	//КонецЕсли;
	ОбновитьОтображениеПланФакт();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьОтборыПоПараметрамСеанса" Тогда
		ДобавитьОтборыПоПараметрамСеанса();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьИнициатора(Команда)
	ВыбранныеСтроки = Элементы.Список.ВыделенныеСтроки;
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьИнициатораЗавершение", ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.ФормаИзменениеИнициатора", Новый Структура("МассивСсылок, ТипСсылок", ВыбранныеСтроки, "СписокДоговоров"), ЭтаФорма,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИнициатораЗавершение(Рез, ДопПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаполнениеПлановыхРесурсов(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Договор", Элементы.Список.ТекущиеДанные.Ссылка);
	
	ОткрытьФорму("Обработка.ЗаполнениеПланаРесурсов.Форма.Форма", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого Эл Из Список.Отбор.Элементы Цикл
		Если Эл.Представление = "Отбор по сотруднику" Тогда 
			Эл.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	УстановитьОтборСценарий();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСценарий()	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Сценарий", Сценарий, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Сценарий));
КонецПроцедуры
 




