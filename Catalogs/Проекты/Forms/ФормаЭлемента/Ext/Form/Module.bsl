#Область СобытияФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Договоры, "Проект", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(РаспределенияДоговоров, "Проект", Объект.Ссылка);
	РольПолныеПрава          = Пользователи.РолиДоступны("КЛАДО_ГенеральныйДиректор");
	Элементы.Администратор.ТолькоПросмотр = НЕ РольПолныеПрава;
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДобавитьОтборыПоПараметрамСеанса();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьДоговорыПроекта" тогда
		Элементы.Договоры.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ ПараметрыЗаписи.Свойство("ИзмененияОбработаны") 
	//	И Модифицированность И НЕ Объект.Ссылка.Пустая() Тогда
	//	Отказ = Истина;
	//	ПолучитьИзмененныеРеквизиты();
	//	Если ИзмененияРеквизитов.Количество() > 0 Тогда
	//		ПараметрыОткрытия = Новый Структура();
	//		ПараметрыОткрытия.Вставить("Объект", Объект.Ссылка);
	//		ПараметрыОткрытия.Вставить("АдресХранилища", ПоместитьИзмененияВХранилище(ИзмененияРеквизитов));
	//		ОткрытьФорму("РегистрСведений.ИсторияИзменения.Форма.ФормаИсторииИзменения", ПараметрыОткрытия, ЭтаФорма,,,,Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//	Иначе
	//		Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//	КонецЕсли;
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если ПараметрыЗаписи.Свойство("ИзмененияОбработаны") Тогда
	//	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИзмененияОбработаны",  ПараметрыЗаписи.ИзмененияОбработаны);
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, ДопПараметры) Экспорт
	//// Начало Изменение реквизитов
	//Если Результат = Неопределено Тогда
	//	Возврат;
	//Иначе
	//	 ЗагрузитьТаблицуИзменений(Результат);
	//	 Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ Отказ Тогда
	//	ИзменениеРеквизитовСервер.ЗаписатьИзмененияРеквизитов(ТекущийОбъект.Ссылка, ИзмененияРеквизитов);
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Договоры, "Проект", Объект.Ссылка);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(РаспределенияДоговоров, "Проект", Объект.Ссылка);
	//// Начало Изменение реквизитов
	//ИзмененияРеквизитов.Очистить();
	//// Конец Изменение реквизитов
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Ответ = Неопределено;

	ПоказатьВопрос(Новый ОписаниеОповещения("ОрганизацияПриИзмененииЗавершение", ЭтотОбъект), "Изменить организацию во всех связанных договорах?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПерезаполнитьОрганизациюВДоговорах(Объект.Ссылка, Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПередНачаломИзменения(Элемент, Отказ)
	Если Объект.Ссылка.Пустая() тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДоговорыПередНачаломДобавленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Перед началом работы с договорами необходимо записать проект. 
										|Записать?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДоговорыПередНачаломДобавленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Перед началом работы с договорами необходимо записать проект. 
										|Записать?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПередНачаломДобавленияЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да тогда
		Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	ОтображатьТолькоТест = Истина;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	ОтображатьТолькоПлан = Истина;
	ОтображатьТолькоТест = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	ОтображатьТолькоПлан = Ложь;
	ОтображатьТолькоТест = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьИзмененныеРеквизиты()
	ИзменениеРеквизитовСервер.ПолучитьИзмененныеРеквизиты(РеквизитФормыВЗначение("Объект"), Объект, ИзмененияРеквизитов);
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененияВХранилище(Знач ИзмененияРеквизитов)
	Возврат ПоместитьВоВременноеХранилище(ИзмененияРеквизитов.Выгрузить(), УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция ЗагрузитьТаблицуИзменений(Адрес)
	ИзмененияРеквизитов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДоговор()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перед выбором договоров необходимо записать проект.");
		Возврат;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьДоговорВыбор", ЭтаФорма);
	Форма = ОткрытьФорму("Справочник.Договоры.ФормаВыбора",,,,,,ОписаниеОповещения);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ1"));
	МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ2"));
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "Проект", Объект.Ссылка, ВидСравненияКомпоновкиДанных.НеРавно);	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.Список, "ТипДоговора", МассивТипов, ВидСравненияКомпоновкиДанных.ВСписке);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДоговорВыбор(Результат, ДопПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат
	КонецЕсли;
	ОбработатьВыбранныйДоговор(Результат, Объект.Ссылка);
	Элементы.Договоры.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыбранныйДоговор(Договор, Проект)
	ДоговорОб = Договор.ПолучитьОбъект();
	ДоговорОб.Проект = Проект;
	Попытка
		ДоговорОб.Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон("Не удалось добавить договор %1 по причине: %2", Договор, ОписаниеОшибки()));
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерезаполнитьОрганизациюВДоговорах(Проект, Организация) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Договоры.Ссылка КАК Ссылка,
		|	Договоры.Организация КАК Организация,
		|	ПРЕДСТАВЛЕНИЕ(Договоры.Ссылка) КАК СсылкаПредставление
		|ИЗ
		|	Справочник.Договоры КАК Договоры
		|ГДЕ
		|	Договоры.Организация <> &Организация
		|	И Договоры.Проект = &Проект";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Проект", Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДоговорОбъект				= ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ДоговорОбъект.Организация	= Организация;
		Попытка
			ДоговорОбъект.Записать();
		Исключение
			Сообщить("Не удалось перезаписать " + ВыборкаДетальныеЗаписи.СсылкаПредставление + ". Текст ошибки: " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПланФакт()
	Если ОтображатьТолькоПлан Тогда 
		Элементы.ФормаПлан.Пометка = Истина;
		Элементы.ФормаФакт.Пометка = Ложь;
		Элементы.ФормаТест.Пометка = Ложь;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Договоры, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе 
		Элементы.ФормаПлан.Пометка = Ложь;
		Элементы.ФормаФакт.Пометка = Истина;
		Элементы.ФормаТест.Пометка = Ложь;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Договоры, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Исполняемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
	Если ОтображатьТолькоТест Тогда 
		Элементы.ФормаПлан.Пометка = Ложь;
		Элементы.ФормаФакт.Пометка = Ложь;
		Элементы.ФормаТест.Пометка = Истина;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Договоры, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Тестируемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьОтборыПоПараметрамСеанса()
	
	СтатусОтбор	= ПараметрыСеанса.СтатусОтбор;
	Если СтатусОтбор = 1 Тогда
		ОтображатьТолькоПлан = Истина;
	КонецЕсли;
	ОбновитьОтображениеПланФакт();
	
КонецПроцедуры

#КонецОбласти









