

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") тогда
		Объект = Параметры.Объект;
		ТипДоговора = Объект.ТипДоговора;
		НаименованиеДоговора = Объект.НаименованиеДоговора;
	КонецЕсли;
	
	Если Параметры.Свойство("ТипДоговора") тогда
		ТипДоговора = Параметры.ТипДоговора;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭтоИмпорт") тогда
		Если Параметры.ЭтоИмпорт Тогда
			Элементы.Подразделение.Видимость = Истина;
			Элементы.НаименованиеДоговора.ТолькоПросмотр = Истина;
			Подразделение = Параметры.Подразделение;
		Иначе
			Элементы.Подразделение.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//ЗаполнитьОтборыДерева();
	ЗаполнитьДерево("ИДеревоЗадачиСторона1");
	ЗаполнитьДерево("ИДеревоЗадачиСторона2");
	ЗаполнитьДерево("ИДеревоЗадачиСторона3");
	ЗаполнитьДерево("ИДеревоЗадачиСторона4");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьОтборыЗапроса(ИмяТаблицы, Запрос)
	
	Если ИмяТаблицы = "ИДеревоЗадачиСторона1" Тогда
		Элементы.ИДеревоЗадачиСторона1.Отображение = ОтображениеТаблицы.Дерево;
		Запрос.Установитьпараметр("СторонаЗадачи", 1);
		Запрос.Установитьпараметр("ЭтапДоговора", ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Формирование"));
		Запрос.Установитьпараметр("Владелец", ?(ЗначениеЗаполнено(Объект), Объект, Неопределено));
	КонецЕсли;
	
	Если ИмяТаблицы = "ИДеревоЗадачиСторона2" Тогда
		Элементы.ИДеревоЗадачиСторона2.Отображение = ОтображениеТаблицы.Дерево;
		Запрос.Установитьпараметр("СторонаЗадачи", 2);
		Запрос.Установитьпараметр("ЭтапДоговора", ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Формирование"));
		Запрос.Установитьпараметр("Владелец", ?(ЗначениеЗаполнено(Объект), Объект, Неопределено));
	КонецЕсли;
	
	Если ИмяТаблицы = "ИДеревоЗадачиСторона3" Тогда
		Элементы.ИДеревоЗадачиСторона3.Отображение = ОтображениеТаблицы.Дерево;
		Запрос.Установитьпараметр("СторонаЗадачи", 1);
		Запрос.Установитьпараметр("ЭтапДоговора", ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Исполнение"));
		Запрос.Установитьпараметр("Владелец", ?(ЗначениеЗаполнено(Объект), Объект, Неопределено));
	КонецЕсли;
	
	Если ИмяТаблицы = "ИДеревоЗадачиСторона4" Тогда
		Элементы.ИДеревоЗадачиСторона4.Отображение = ОтображениеТаблицы.Дерево;
		Запрос.Установитьпараметр("СторонаЗадачи", 2);
		Запрос.Установитьпараметр("ЭтапДоговора", ПредопределенноеЗначение("Перечисление.ЭтапыДоговора.Исполнение"));
		Запрос.Установитьпараметр("Владелец", ?(ЗначениеЗаполнено(Объект), Объект, Неопределено));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ИмяТаблицы)
	
	ТекДерево = ЭтаФорма[ИмяТаблицы];
	Запрос = Новый Запрос;
	ЗаполнитьОтборыЗапроса(ИмяТаблицы, Запрос);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Задачи.Ссылка КАК Задача,
	               |	ЛОЖЬ КАК Отметка
	               |ИЗ
	               |	Справочник.Задачи КАК Задачи
	               |ГДЕ
	               |	Задачи.Владелец = &Владелец
	               |	И Задачи.ЭтапДоговора = &ЭтапДоговора
	               |	И Задачи.СторонаЗадачи = &СторонаЗадачи
	               |	И НЕ Задачи.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Задачи.Ссылка ИЕРАРХИЯ";
	ЗначениеВРеквизитФормы(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСиерархией), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ГруппаСторона2.Видимость = НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") И НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ3");
	Элементы.ГруппаСторона4.Видимость = НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4");
	Элементы.ГруппаСторона1.Видимость = НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4") И НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ3");
	Элементы.ГруппаСторона3.ОтображатьЗаголовок = НЕ ТипДоговора = ПредопределенноеЗначение("Перечисление.ТипыДоговоров.ДТ4");
КонецПроцедуры

&НаКлиенте
Процедура ИДеревоЗадачиСторона11ВыборПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ИДеревоЗадачиСторона1.ТекущиеДанные;
	Если ТекущиеДанные.Отметка Тогда
		ОтметитьФлажкиРодителейРекурсивно(ТекущиеДанные, ТекущиеДанные.Отметка);
	Иначе
	 	ОтметитьФлажкиРекурсивно(ТекущиеДанные, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьФлажкиРекурсивно(ТекущаяСтрока, Отметка)
	Если Не ТипЗнч(ТекущаяСтрока) = Тип("ДанныеФормыДерево") Тогда
		ТекущаяСтрока.Отметка = Отметка;
	КонецЕсли;
	 Для Каждого Строка ИЗ ТекущаяСтрока.ПолучитьЭлементы() Цикл
		 Строка.Отметка = Отметка;
		 ОтметитьФлажкиРекурсивно(Строка, Отметка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьФлажкиРодителейРекурсивно(ТекущаяСтрока, Отметка)
	ТекущаяСтрока.Отметка = Отметка;
	Строка = ТекущаяСтрока.ПолучитьРодителя();
	Если Не Строка = Неопределено Тогда
		Строка.Отметка = Отметка;
		ОтметитьФлажкиРодителейРекурсивно(Строка, Отметка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИОтметитьВсе1(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ИСнятьВсе1(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона1, Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ИДеревоЗадачиСторона2ОтметкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ИДеревоЗадачиСторона2.ТекущиеДанные;
	Если ТекущиеДанные.Отметка Тогда
		ОтметитьФлажкиРодителейРекурсивно(ТекущиеДанные, ТекущиеДанные.Отметка);
	Иначе
	 	ОтметитьФлажкиРекурсивно(ТекущиеДанные, Ложь);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИОтметитьВсе2(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона2, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ИСнятьВсе2(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона2, Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ИСнятьВсе3(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона3, Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ИОтметитьВсе3(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона3, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ИСнятьВсе4(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона4, Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ИОтметитьВсе4(Команда)
	 ОтметитьФлажкиРекурсивно(ИДеревоЗадачиСторона4, Истина);
КонецПроцедуры


&НаКлиенте
Процедура ИДеревоЗадачиСторона4ОтметкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ИДеревоЗадачиСторона4.ТекущиеДанные;
	Если ТекущиеДанные.Отметка Тогда
		ОтметитьФлажкиРодителейРекурсивно(ТекущиеДанные, ТекущиеДанные.Отметка);
	Иначе
	 	ОтметитьФлажкиРекурсивно(ТекущиеДанные, Ложь);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИДеревоЗадачиСторона3ОтметкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ИДеревоЗадачиСторона3.ТекущиеДанные;
	Если ТекущиеДанные.Отметка Тогда
		ОтметитьФлажкиРодителейРекурсивно(ТекущиеДанные, ТекущиеДанные.Отметка);
	Иначе
	 	ОтметитьФлажкиРекурсивно(ТекущиеДанные, Ложь);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПеренестиВДоговор(Команда)
	СписокЗадач = Новый СписокЗначений;
	Для Ин = 1 по 4 Цикл
		ТекТаблица = ЭтаФорма["ИДеревоЗадачиСторона"+ин];
		ЗаполнитьРекурсивноСписокЗадачи(ТекТаблица.ПолучитьЭлементы(),СписокЗадач);
	КонецЦикла;
	Закрыть(Новый Структура("СписокЗадач, Процесс, Подразделение, НаименованиеДоговора", СписокЗадач, Объект, Подразделение, НаименованиеДоговора));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРекурсивноСписокЗадачи(Строки, СписокЗадач)
	Для Каждого Строка ИЗ Строки Цикл
		Если Строка.Отметка Тогда
			СписокЗадач.Добавить(Строка.Задача);
		КонецЕсли;
		ЗаполнитьРекурсивноСписокЗадачи(Строка.ПолучитьЭлементы(), СписокЗадач);
	КонецЦикла;
КонецПроцедуры
