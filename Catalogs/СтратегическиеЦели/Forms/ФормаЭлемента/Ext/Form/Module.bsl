
&НаКлиенте
Процедура ДоговорыПередНачаломИзменения(Элемент, Отказ)
	Если Объект.Ссылка.Пустая() тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДоговорыПередНачаломДобавленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Перед началом работы с договорами необходимо записать стратегическую цель. 
										|Записать?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Договоры, "Проект", Объект.Ссылка);
	РольПолныеПрава          = Пользователи.РолиДоступны("КЛАДО_ГенеральныйДиректор");
	Элементы.Администратор.ТолькоПросмотр = НЕ РольПолныеПрава;
	ДобавитьОтборыПоПараметрамСеанса();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Договоры, "Проект", Объект.Ссылка);
	//// Начало Изменение реквизитов
	//ИзмененияРеквизитов.Очистить();
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ДоговорыПередНачаломДобавленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Перед началом работы с договорами необходимо записать стратегическую цель. 
										|Записать?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПередНачаломДобавленияЗавершение(Результат, ДопПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да тогда
		Записать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьДоговорыПроекта" тогда
		Элементы.Договоры.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если ПараметрыЗаписи.Свойство("ИзмененияОбработаны") Тогда
	//	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИзмененияОбработаны",  ПараметрыЗаписи.ИзмененияОбработаны);
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ ПараметрыЗаписи.Свойство("ИзмененияОбработаны") 
	//	И Модифицированность И НЕ Объект.Ссылка.Пустая() Тогда
	//	Отказ = Истина;
	//	ПолучитьИзмененныеРеквизиты();
	//	Если ИзмененияРеквизитов.Количество() > 0 Тогда
	//		ПараметрыОткрытия = Новый Структура();
	//		ПараметрыОткрытия.Вставить("Объект", Объект.Ссылка);
	//		ПараметрыОткрытия.Вставить("АдресХранилища", ПоместитьИзмененияВХранилище(ИзмененияРеквизитов));
	//		ОткрытьФорму("РегистрСведений.ИсторияИзменения.Форма.ФормаИсторииИзменения", ПараметрыОткрытия, ЭтаФорма,,,,Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтаФорма), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//	Иначе
	//		Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//	КонецЕсли;
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Результат, ДопПараметры) Экспорт
	//// Начало Изменение реквизитов
	//Если Результат = Неопределено Тогда
	//	Возврат;
	//Иначе
	//	 ЗагрузитьТаблицуИзменений(Результат);
	//	 Записать(Новый Структура("ИзмененияОбработаны", Истина));
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//// Начало Изменение реквизитов
	//Если НЕ Отказ Тогда
	//	ИзменениеРеквизитовСервер.ЗаписатьИзмененияРеквизитов(ТекущийОбъект.Ссылка, ИзмененияРеквизитов);
	//КонецЕсли;
	//// Конец Изменение реквизитов
КонецПроцедуры

// Начало Изменение реквизитов
&НаСервере
Процедура ПолучитьИзмененныеРеквизиты()
	ИзменениеРеквизитовСервер.ПолучитьИзмененныеРеквизиты(РеквизитФормыВЗначение("Объект"), Объект, ИзмененияРеквизитов);
КонецПроцедуры

&НаСервере
Функция ПоместитьИзмененияВХранилище(Знач ИзмененияРеквизитов)
	Возврат ПоместитьВоВременноеХранилище(ИзмененияРеквизитов.Выгрузить(), УникальныйИдентификатор);
КонецФункции

&НаСервере
Функция ЗагрузитьТаблицуИзменений(Адрес)
	ИзмененияРеквизитов.Загрузить(ПолучитьИзВременногоХранилища(Адрес));
КонецФункции

// Конец Изменение реквизитов

&НаСервере
Процедура АдминистраторПриИзмененииНаСервере()
	Объект.Подразделение = Объект.Администратор.Подразделение;
КонецПроцедуры

&НаКлиенте
Процедура АдминистраторПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Объект.Подразделение) Тогда
		АдминистраторПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	ОтображатьТолькоПлан = Истина;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	ОтображатьТолькоПлан = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПланФакт()
	Если ОтображатьТолькоПлан Тогда 
		Элементы.ФормаПлан.Пометка = Истина;
		Элементы.ФормаФакт.Пометка = Ложь;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Договоры, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе 
		Элементы.ФормаПлан.Пометка = Ложь;
		Элементы.ФормаФакт.Пометка = Истина;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Договоры, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьОтборыПоПараметрамСеанса()
	
	СтатусОтбор			= ПараметрыСеанса.СтатусОтбор;
	
	Если СтатусОтбор = 1 Тогда
		ОтображатьТолькоПлан = Истина;
	КонецЕсли;
	ОбновитьОтображениеПланФакт();
	
КонецПроцедуры