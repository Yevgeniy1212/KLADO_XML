
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийСотрудник = Пользователи.ТекущийПользователь().Сотрудник;
	Если Не ЗначениеЗаполнено(ТекущийСотрудник) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Необходимо заполнить текущего сотрудника пользователя!");
	КонецЕсли;
	ОтображатьВсеДанные = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийСотрудник, "Должность.ОтображатьВсеДанные"); 
	Если Не ЗначениеЗаполнено(ОтображатьВсеДанные) Тогда
		//добавляем отбор по объектам
		СписокПроектов = КЛАДО_ОбщийМодульСервер.ПолучитьСписокПроектовТекущегоСотрудника(ТекущийСотрудник);
		ГруппаОтборов = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы, "Отбор по сотруднику", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Администратор", ТекущийСотрудник);  
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтборов, "Ссылка", СписокПроектов, ВидСравненияКомпоновкиДанных.ВСписке);  
	КонецЕсли;
	ДобавитьОтборыПоПараметрамСеанса();
	РольПолныеПрава          = Пользователи.РолиДоступны("КЛАДО_ГенеральныйДиректор");
	Элементы.СписокСоздать.Доступность = РольПолныеПрава;
	Элементы.ФормаСкопировать.Доступность = РольПолныеПрава;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого эл из Список.Отбор.Элементы Цикл
		Эл.Использование = ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьОтборыПоПараметрамСеанса" Тогда
		ДобавитьОтборыПоПараметрамСеанса();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементовФормы

&НаКлиенте
Процедура Создать(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеДанныхСписка", ЭтаФорма);
	ОткрытьФорму("Справочник.СтратегическиеЦели.Форма.ФормаЭлемента",,,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеДанныхСписка", ЭтаФорма);
	ОткрытьФорму("Справочник.СтратегическиеЦели.Форма.ФормаЭлемента",Новый Структура("ЗначениеКопирования", ТекущиеДанные.Ссылка),,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеДанныхСписка", ЭтаФорма);
	ОткрытьФорму("Справочник.СтратегическиеЦели.Форма.ФормаЭлемента",Новый Структура("Ключ", ТекущиеДанные.Ссылка),,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновлениеДанныхСписка", ЭтаФорма);
	ТекКлюч = Неопределено;
	Если ТекущиеДанные.Свойство("Договор") Тогда
		Если ТипЗнч(ТекущиеДанные.Договор) = Тип("СправочникСсылка.Договоры") Тогда
			ТекКлюч = ТекущиеДанные.Договор;
			ОткрытьФорму("Справочник.Договоры.Форма.ФормаЭлемента",Новый Структура("Ключ", ТекКлюч),,,,,ОписаниеОповещения);
		КонецЕсли;
	ИначеЕсли ТекущиеДанные.Свойство("Ссылка")  Тогда
		Если ТипЗнч(ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.СтратегическиеЦели") Тогда
			ТекКлюч = ТекущиеДанные.Ссылка;
			ОткрытьФорму("Справочник.СтратегическиеЦели.Форма.ФормаЭлемента",Новый Структура("Ключ", ТекКлюч),,,,,ОписаниеОповещения);
		КонецЕсли;
	ИначеЕсли ТекущиеДанные.Свойство("Подразделение") Тогда
		ТекКлюч = ТекущиеДанные.Подразделение;
		ОткрытьФорму("Справочник.Подразделения.Форма.ФормаЭлемента",Новый Структура("Ключ", ТекКлюч),,,,,ОписаниеОповещения);
	КонецЕсли;
	Если ТекКлюч = Неопределено Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	 Если НЕ ТипЗнч(Строка) = Тип("СтрокаГруппировкиДинамическогоСписка")
		ИЛИ НЕ ТипЗнч(Строка.Ключ) = Тип("СправочникСсылка.Подразделения") Тогда
	 	Возврат;
	 КонецЕсли;
	 ОбработатьПеремещение(ПараметрыПеретаскивания.Значение[0].Ключ, Строка.Ключ);
	 Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	 Если НЕ ТипЗнч(Строка) = Тип("СтрокаГруппировкиДинамическогоСписка")
		ИЛИ НЕ ТипЗнч(Строка.Ключ) = Тип("СправочникСсылка.Подразделения") Тогда
	 	СтандартнаяОбработка = Ложь;
	 КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Если ПараметрыПеретаскивания.Значение.Количество() <> 1 Тогда
		 Выполнение = Ложь;
	КонецЕсли;
	Если НЕ ТипЗнч(ПараметрыПеретаскивания.Значение[0]) = Тип("СтрокаГруппировкиДинамическогоСписка")
		ИЛИ НЕ ТипЗнч(ПараметрыПеретаскивания.Значение[0].Ключ) = Тип("СправочникСсылка.СтратегическиеЦели") Тогда
		 Выполнение = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура План(Команда)
	ОтображатьТолькоПлан = Истина;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

&НаКлиенте
Процедура Факт(Команда)
	ОтображатьТолькоПлан = Ложь;
	ОбновитьОтображениеПланФакт();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновлениеДанныхСписка(Рез, ДопПараметры) Экспорт
	Элементы.Список.Обновить();
КонецПроцедуры

&НаСервере
Процедура ДобавитьОтборыПоПараметрамСеанса()
	
	КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("Администратор"), ПараметрыСеанса.СотрудникОтбор, ЗначениеЗаполнено(ПараметрыСеанса.СотрудникОтбор));
	
	СтатусОтбор			= ПараметрыСеанса.СтатусОтбор;
	
	Если СтатусОтбор = 1 Тогда
		ОтображатьТолькоПлан = Истина;
	КонецЕсли;
	ОбновитьОтображениеПланФакт();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьПеремещение(Цель, Подразделение)
	ЦельОб = Цель.ПолучитьОбъект();
	ЦельОб.Подразделение = Подразделение;
	ЦельОб.Записать();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеПланФакт()
	Если ОтображатьТолькоПлан Тогда 
		Элементы.ФормаПлан.Пометка = Истина;
		Элементы.ФормаФакт.Пометка = Ложь;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе 
		Элементы.ФормаПлан.Пометка = Ложь;
		Элементы.ФормаФакт.Пометка = Истина;
		КЛАДО_ОбщийМодульСервер.ДобавитьОтборыПоПараметрамСеанса(Список, Новый ПолеКомпоновкиДанных("СостояниеИсполнения"), Перечисления.СтатусыДоговоровПроектов.Планируемый, Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти




