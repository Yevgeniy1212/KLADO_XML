#Область ПрограммныйИнтерфейс

// Обработчик расшифровки табличного документа формы отчета.
// См. "Расширение поля формы для поля табличного документа.ОбработкаРасшифровки" в синтакс-помощнике.
//
// Параметры:
//   ФормаОтчета - ФормаКлиентскогоПриложения - форма отчета.
//   Элемент     - ПолеФормы        - табличный документ.
//   Расшифровка - Произвольный     - значение расшифровки точки, серии или значения диаграммы.
//   СтандартнаяОбработка - Булево  - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаРасшифровки(ФормаОтчета, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	СтруктураРасшифровки = ОтчетыВызовСервера.ПолучитьНастройкиРасшифровки(Расшифровка, ФормаОтчета.ОтчетДанныеРасшифровки, ФормаОтчета.Отчет.КомпоновщикНастроек);
	КлючТекущегоВарианта = ФормаОтчета.КлючТекущегоВарианта;
	
	ЭлементыДляПерехода = СтрРазделить(
	"СуммаНачисления
	|СуммаПоДоговору
	|СуммаПлан
	|СуммаОплаты
	|СуммаНачисленийИзУС", 
	Символы.ПС);
	
	Если ЭлементыДляПерехода.Найти(СтруктураРасшифровки.ТекущийЭлемент) = Неопределено 
		Или Не СтруктураРасшифровки.ТекущееДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыФормы = Новый Структура("КлючВарианта");
	ПараметрыФормы.Вставить("ОтображатьТолькоПлан", ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
	ПараметрыФормы.Вставить("Отбор", Новый Структура);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("КлючНазначенияИспользования", "Расшифровка");
	
	//Если КлючТекущегоВарианта = "Основной" Тогда
		
	СтандартнаяОбработка = Ложь;
	
	Если СтруктураРасшифровки.Свойство("Продукт") Тогда
		ПараметрыФормы.Отбор.Вставить("Продукт", СтруктураРасшифровки.Продукт);
	КонецЕсли;
	
	Если СтруктураРасшифровки.Свойство("Проект") Тогда
		ПараметрыФормы.Отбор.Вставить("Проект", СтруктураРасшифровки.Проект);
	КонецЕсли;
	
	ПараметрыФормы.КлючВарианта = "ОсновнойПроекты"; 
	ОткрытьФорму("Отчет.РаздельныйУчет.Форма", ПараметрыФормы, , Новый УникальныйИдентификатор);
		
	//ИначеЕсли КлючТекущегоВарианта = "ОсновнойДоговоры" Тогда 
	//	
	//	СтандартнаяОбработка = Ложь;
	//	
	//	Если СтруктураРасшифровки.Свойство("Продукт") Тогда
	//		ПараметрыФормы.Отбор.Вставить("Продукт", СтруктураРасшифровки.Продукт);
	//	КонецЕсли;
	//	
	//	Если СтруктураРасшифровки.Свойство("Проект") Тогда
	//		ПараметрыФормы.Отбор.Вставить("Проект", СтруктураРасшифровки.Проект);
	//	КонецЕсли;
	//	
	//	ПараметрыФормы.КлючВарианта = "ОсновнойПроекты"; 		
	//	ОткрытьФорму("Отчет.РаздельныйУчет.Форма", ПараметрыФормы, , Новый УникальныйИдентификатор);
	//	
	//ИначеЕсли КлючТекущегоВарианта = "ОсновнойКонтрагенты" Тогда
	//	
	//	СтандартнаяОбработка = Ложь;
	//	
	//	Если СтруктураРасшифровки.Свойство("ДоговорКонтрагент") Тогда
	//		ПараметрыФормы.Отбор.Вставить("ДоговорКонтрагент", СтруктураРасшифровки.ДоговорКонтрагент);
	//	КонецЕсли;
	//	
	//	ПараметрыФормы.КлючВарианта = "ОсновнойДоговоры";		
	//	ОткрытьФорму("Отчет.РаздельныйУчет.Форма", ПараметрыФормы, , Новый УникальныйИдентификатор);
	//	
	//КонецЕсли; 
	
	//Если КлючТекущегоВарианта = "Основной" Или КлючТекущегоВарианта = "ОсновнойПроекты" Тогда
	//	
	//	Если НЕ СтруктураРасшифровки.ТекущийЭлемент = Неопределено 
	//		И СтруктураРасшифровки.ТекущееДействие =  ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать 
	//		И (СтруктураРасшифровки.ТекущийЭлемент = "СуммаНачисления" ИЛИ СтруктураРасшифровки.ТекущийЭлемент = "СуммаПоДоговору" ИЛИ СтруктураРасшифровки.ТекущийЭлемент = "СуммаПлан" ИЛИ СтруктураРасшифровки.ТекущийЭлемент = "СуммаОплаты" ИЛИ СтруктураРасшифровки.ТекущийЭлемент = "СуммаНачисленийИзУС") Тогда
	//		
	//		СтандартнаяОбработка = Ложь;
	//		
	//		ПараметрыФормы = Новый Структура;
	//		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	//		ПараметрыФормы.Вставить("КлючНазначенияИспользования", "Расшифровка");
	//		
	//		Отбор = Новый Структура();
	//		
	//		Если СтруктураРасшифровки.Свойство("Продукт") Тогда
	//			Отбор.Вставить("Продукт", СтруктураРасшифровки.Продукт);
	//		КонецЕсли;
	//		
	//		Если СтруктураРасшифровки.Свойство("Проект") Тогда
	//			Отбор.Вставить("Проект", СтруктураРасшифровки.Проект);
	//		КонецЕсли;
	//		
	//		ПараметрыФормы.Вставить("Отбор", Отбор); 
	//		
	//		Если ФормаОтчета.КлючТекущегоВарианта = "Основной" Тогда
	//			ПараметрыФормы.Вставить("КлючВарианта", "ОсновнойПроекты"); 
	//		ИначеЕсли  ФормаОтчета.КлючТекущегоВарианта = "ОсновнойПроекты" Тогда
	//			ПараметрыФормы.Вставить("КлючВарианта", "ОсновнойДоговоры");
	//		КонецЕсли;
	//		ПараметрыФормы.Вставить("ОтображатьТолькоПлан", ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
	//					
	//		ОткрытьФорму("Отчет.РаздельныйУчет.Форма", ПараметрыФормы, , Новый УникальныйИдентификатор);
	//	КонецЕсли;	
			
КонецПроцедуры

Процедура ОбработчикКоманды_СНДС(ФормаОтчета, Команда) Экспорт
	
	ФормаОтчета.КЛАДО_ДопПараметры.СуммыСНДС = Истина;
	ПослеНажатия_НДС(ФормаОтчета);
	
КонецПроцедуры

Процедура ОбработчикКоманды_БезНДС(ФормаОтчета, Команда) Экспорт
	
	ФормаОтчета.КЛАДО_ДопПараметры.СуммыСНДС = Ложь;
	ПослеНажатия_НДС(ФормаОтчета);
	
КонецПроцедуры

Процедура ОбработчикКоманды_План(ФормаОтчета, Команда) Экспорт
	
	ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан = Истина;
	ПослеНажатия_ПланФакт(ФормаОтчета);
	
КонецПроцедуры

Процедура ОбработчикКоманды_Факт(ФормаОтчета, Команда) Экспорт
	
	ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан = Ложь;
	ПослеНажатия_ПланФакт(ФормаОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПослеНажатия_НДС(ФормаОтчета)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ФормаОтчета.Элементы, 
		"КЛАДО_СНДС", "Пометка", ФормаОтчета.КЛАДО_ДопПараметры.СуммыСНДС);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ФормаОтчета.Элементы, 
		"КЛАДО_БезНДС", "Пометка", Не ФормаОтчета.КЛАДО_ДопПараметры.СуммыСНДС);
	
	ПараметрыДанных = ФормаОтчета.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных;
	ПараметрыДанных.УстановитьЗначениеПараметра("СуммыСНДС", ФормаОтчета.КЛАДО_ДопПараметры.СуммыСНДС);
	
	ОтчетыКлиент.СформироватьОтчет(ФормаОтчета);
	
КонецПроцедуры 

Процедура ПослеНажатия_ПланФакт(ФормаОтчета)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ФормаОтчета.Элементы, 
		"КЛАДО_План", "Пометка", ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ФормаОтчета.Элементы, 
		"КЛАДО_Факт", "Пометка", Не ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
	
	ПараметрыДанных = ФормаОтчета.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных;	
	ПараметрыДанных.УстановитьЗначениеПараметра("План", ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
	ПараметрыДанных.УстановитьЗначениеПараметра("Факт", Не ФормаОтчета.КЛАДО_ДопПараметры.ОтображатьТолькоПлан);
		
	ОтчетыКлиент.СформироватьОтчет(ФормаОтчета);
	
КонецПроцедуры

#КонецОбласти


 
 

 