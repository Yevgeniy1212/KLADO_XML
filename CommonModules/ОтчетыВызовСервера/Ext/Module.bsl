
#Область РасшифровкаОтчета

// Возвращает доступное поле по полю компоновки
Функция ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(ПолеКомпоновкиДанных, ОбластьПоиска) Экспорт
	
	Если ТипЗнч(ПолеКомпоновкиДанных) = Тип("Строка") Тогда
		ПолеПоиска = Новый ПолеКомпоновкиДанных(ПолеКомпоновкиДанных);
	Иначе
		ПолеПоиска = ПолеКомпоновкиДанных;
	КонецЕсли;
	
	Если ТипЗнч(ОбластьПоиска) = Тип("КомпоновщикНастроекКомпоновкиДанных")
		Или ТипЗнч(ОбластьПоиска) = Тип("ДанныеРасшифровкиКомпоновкиДанных")
		Или ТипЗнч(ОбластьПоиска) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		Возврат ОбластьПоиска.Настройки.ДоступныеПоляВыбора.НайтиПоле(ПолеПоиска);
	Иначе
		Возврат ОбластьПоиска.НайтиПоле(ПолеПоиска);
	КонецЕсли;
	
КонецФункции

Функция ДобавитьРодителей(ЭлементРасшифровки, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы = Ложь)  Экспорт
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			ДоступноеПоле = ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(Новый ПолеКомпоновкиДанных(Поле.Поле), ТекущийОтчет);
			Если ДоступноеПоле = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Не ВключатьРесурсы И ДоступноеПоле.Ресурс Тогда
				Продолжить;
			КонецЕсли;
			МассивПолейРасшифровки.Добавить(Поле);
		КонецЦикла;
	КонецЕсли;
	Для каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ДобавитьРодителей(Родитель, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы);
	КонецЦикла;
	
КонецФункции

// Возвращает массив, по которому следует расшифровать отчет
Функция ПолучитьМассивПолейРасшифровки(Расшифровка, ДанныеРасшифровки, ТекущийОтчет = Неопределено, ВключатьРесурсы = Ложь) Экспорт
	
	МассивПолейРасшифровки = Новый Массив;
	
	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") 
		И ТипЗнч(Расшифровка) <> Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		Возврат МассивПолейРасшифровки;
	КонецЕсли;
	
	Если ТекущийОтчет = Неопределено Тогда
		ТекущийОтчет = ДанныеРасшифровки;
	КонецЕсли;
	
	// Добавим поля родительских группировок
	ДобавитьРодителей(ДанныеРасшифровки.Элементы[Расшифровка], ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы);
	
	Количество = МассивПолейРасшифровки.Количество();
	Для Индекс = 1 По Количество Цикл
		ОбратныйИндекс = Количество - Индекс;
		Для ИндексВнутри = 0 По ОбратныйИндекс - 1 Цикл
			Если МассивПолейРасшифровки[ОбратныйИндекс].Поле = МассивПолейРасшифровки[ИндексВнутри].Поле Тогда
				МассивПолейРасшифровки.Удалить(ОбратныйИндекс);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Добавим отбор, установленный в отчете
	Для каждого ЭлементОтбора Из ТекущийОтчет.Настройки.Отбор.Элементы Цикл
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		МассивПолейРасшифровки.Добавить(ЭлементОтбора);
	КонецЦикла;
	
	Возврат МассивПолейРасшифровки;
	
КонецФункции

&НаСервере  
Функция ПолучитьНастройкиРасшифровки(ИдентификаторРасшифровки, ДанныеРасшифровки, Знач КомпоновщикНастроек) Экспорт

    // В тонком клиенте ДанныеРасшифровки это адрес временного хранилища
	ДанныеРасшифровкиОбъект = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
    МассивПолей = ОтчетыВызовСервера.ПолучитьМассивПолейРасшифровки(ИдентификаторРасшифровки, ДанныеРасшифровкиОбъект, КомпоновщикНастроек, );
	
	СтруктураРасшифровки = Новый Структура("ТекущийЭлемент, ТекущееДействие");
	
	ТекЭлементРасшифровки = ДанныеРасшифровкиОбъект.Элементы[ИдентификаторРасшифровки];
	ПоляРасшифровки = ТекЭлементРасшифровки.ПолучитьПоля();
	Если ПоляРасшифровки.Количество() > 0 Тогда
		СтруктураРасшифровки.Вставить("ТекущийЭлемент", ПоляРасшифровки[0].Поле);
	КонецЕсли;
	СтруктураРасшифровки.Вставить("ТекущееДействие", ТекЭлементРасшифровки.ОсновноеДействие); 
	Для Каждого Эл ИЗ МассивПолей Цикл
		Если ТипЗнч(Эл) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
			СтруктураРасшифровки.Вставить(Строка(Эл.Поле), Эл.Значение);
		КонецЕсли;
	КонецЦикла;
    Возврат СтруктураРасшифровки;

КонецФункции// ПолучитьНастройкиРасшифровки()

#КонецОбласти